{"version":3,"sources":["webpack://vanilla-admin/./packages/vanilla-utils/src/fileUtils.ts","webpack://vanilla-admin/./packages/vanilla-utils/src/mathUtils.ts","webpack://vanilla-admin/./packages/vanilla-utils/src/promiseUtils.ts","webpack://vanilla-admin/./packages/vanilla-utils/src/stringUtils.ts","webpack://vanilla-admin/./packages/vanilla-utils/src/systemUtils.ts","webpack://vanilla-admin/./packages/vanilla-utils/src/typeUtils.ts","webpack://vanilla-admin/./packages/vanilla-utils/index.ts","webpack://vanilla-admin/./packages/vanilla-utils/src/debugUtils.ts","webpack://vanilla-admin/./plugins/swagger-ui/src/scripts/entries/admin.tsx","webpack://vanilla-admin/./packages/vanilla-i18n/src/localeStore.ts","webpack://vanilla-admin/./packages/vanilla-i18n/src/LocaleProvider.tsx","webpack://vanilla-admin/./packages/vanilla-i18n/src/translationStore.ts","webpack://vanilla-admin/./packages/vanilla-i18n/src/LocaleDisplayer.tsx","webpack://vanilla-admin/./packages/vanilla-i18n/src/index.ts","webpack://vanilla-admin/./build/entries/public-path.ts"],"names":["IMAGE_REGEX","isFileImage","file","test","type","logDebug","name","simplifyFraction","numerator","denominator","findGCD","a","b","gcd","shorthand","resolvePromisesSequentially","promiseFunctions","Array","isArray","Error","Promise","resolve","reject","count","results","iterationFunction","previousPromise","currentPromise","then","result","concat","catch","err","reduce","hashString","str","hashReduce","prevHash","currVal","charCodeAt","split","compare","val1","val2","localeCompare","slugify","options","whiteSpaceNormalizeRegexp","allowMultipleDashes","normalize","replace","trim","toLocaleLowerCase","splitStringLoosely","toSplit","splitWith","normalizedName","normalizedSplitTerm","normalizedPieces","RegExp","charactersUsed","map","piece","start","length","substring","matchAtMention","subtext","shouldStartWithSpace","requireQuotesForWhitespace","lines","lastLine","nonExcludedCharacters","excludeWhiteSpace","excluded","regexStr","regex","match","exec","rawMatch","SAFE_PROTOCOL_REGEX","sanitizeUrl","url","capitalizeFirstLetter","charAt","toUpperCase","slice","promiseTimeout","duration","setTimeout","OS","guessOperatingSystem","userAgent","navigator","vendor","window","opera","ANDROID","MSStream","IOS","UNKNOWN","isInstanceOfOneOf","needle","haystack","classItem","indexArrayByKey","array","key","object","item","push","internalDebugValue","debug","newValue","undefined","console","log","logError","process","error","logWarning","warn","onReady","mountPoint","document","getElementById","mountSwagger","currentLocale","localeStore","callbacks","getLocales","onLocaleChange","callback","setCurrentLocale","localeKey","forEach","getCurrentLocale","loadLocales","locales","clearLocales","LocaleContext","React","createContext","LocaleProvider","props","useState","setLocales","useEffect","children","useLocaleInfo","useContext","translationStore","loadTranslations","translations","clearTranslations","translate","defaultTranslation","substr","t","LocaleDisplayer","selectedLocale","locale","localeContent","displayLocale","fullLocaleName","displayNames","__webpack_public_path__","assetUrl","__BUILD__SECTION__"],"mappings":";;;;;;;;;;;;AAAA;;;;AAKA;AAEA;;AACA,IAAMA,WAAW,GAAG,0BAApB;AAEA;;;;;;;;;;;;AAWO,SAASC,WAAT,CAAqBC,IAArB,EAA0C;AAC7C,MAAIF,WAAW,CAACG,IAAZ,CAAiBD,IAAI,CAACE,IAAtB,CAAJ,EAAiC;AAC7B,WAAO,IAAP;AACH;;AAEDC,wCAAQ,CAAC,+BAAD,EAAkCH,IAAI,CAACI,IAAvC,CAAR;AACA,SAAO,KAAP;AACH,C;;AC5BD;;;;;AAKA;;;;;;AAMO,SAASC,gBAAT,CAA0BC,SAA1B,EAA6CC,WAA7C,EAAkE;AACrE,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,CAAD,EAAIC,CAAJ,EAAU;AACtB,WAAOA,CAAC,GAAGF,OAAO,CAACE,CAAD,EAAID,CAAC,GAAGC,CAAR,CAAV,GAAuBD,CAA/B;AACH,GAFD;;AAGA,MAAME,GAAG,GAAGH,OAAO,CAACF,SAAD,EAAYC,WAAZ,CAAnB;AAEAD,WAAS,GAAGA,SAAS,GAAGK,GAAxB;AACAJ,aAAW,GAAGA,WAAW,GAAGI,GAA5B;AAEA,SAAO;AACHL,aAAS,EAATA,SADG;AAEHC,eAAW,EAAXA,WAFG;AAGHK,aAAS,EAAEL,WAAW,GAAG,GAAd,GAAoBD;AAH5B,GAAP;AAKH,C;;ACzBD;;;;;;;AAYA;;;;;;;;;;;;;;AAcO,SAASO,2BAAT,CAAqCC,gBAArC,EAAkG;AACrG,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,gBAAd,CAAL,EAAsC;AAClC,UAAM,IAAIG,KAAJ,CAAU,iDAAV,CAAN;AACH;;AAED,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,QAAIC,KAAK,GAAG,CAAZ;AACA,QAAIC,OAAO,GAAG,EAAd;;AAEA,aAASC,iBAAT,CAA2BC,eAA3B,EAA4CC,cAA5C,EAA4D;AACxD,aAAOD,eAAe,CACjBE,IADE,CACG,UAAAC,MAAM,EAAI;AACZ,YAAIN,KAAK,OAAO,CAAhB,EAAmB;AACfC,iBAAO,GAAGA,OAAO,CAACM,MAAR,CAAeD,MAAf,CAAV;AACH;;AAED,eAAOF,cAAc,CAACE,MAAD,EAASL,OAAT,EAAkBD,KAAlB,CAArB;AACH,OAPE,EAQFQ,KARE,CAQI,UAAAC,GAAG;AAAA,eAAIV,MAAM,CAACU,GAAD,CAAV;AAAA,OARP,CAAP;AASH;;AAEDhB,oBAAgB,GAAGA,gBAAgB,CAACc,MAAjB,CAAwB;AAAA,aAAMV,OAAO,CAACC,OAAR,EAAN;AAAA,KAAxB,CAAnB;AAEAL,oBAAgB,CAACiB,MAAjB,CAAwBR,iBAAxB,EAA2CL,OAAO,CAACC,OAAR,CAAgB,KAAhB,CAA3C,EAAmEO,IAAnE,CAAwE,YAAM;AAC1EP,aAAO,CAACG,OAAD,CAAP;AACH,KAFD;AAGH,GArBM,CAAP;AAsBH,C;;ACrDD;;;;;;;AAOA;;;;;;;;AAQO,SAASU,UAAT,CAAoBC,GAApB,EAAyC;AAC5C,WAASC,UAAT,CAAoBC,QAApB,EAA8BC,OAA9B,EAAuC;AACnC;AACA,WAAO,CAACD,QAAQ,IAAI,CAAb,IAAkBA,QAAlB,GAA6BC,OAAO,CAACC,UAAR,CAAmB,CAAnB,CAApC;AACH;;AACD,SAAOJ,GAAG,CAACK,KAAJ,CAAU,EAAV,EAAcP,MAAd,CAAqBG,UAArB,EAAiC,CAAjC,CAAP;AACH;;AAID;;;;;;;;AAQO,SAASK,OAAT,CAA4CC,IAA5C,EAAqDC,IAArD,EAA6E;AAChF,MAAI,OAAOD,IAAP,KAAgB,QAAhB,IAA4B,OAAOC,IAAP,KAAgB,QAAhD,EAA0D;AACtD,WAAOD,IAAI,CAACE,aAAL,CAAmBD,IAAnB,CAAP;AACH,GAFD,MAEO;AACH,QAAID,IAAI,GAAGC,IAAX,EAAiB;AACb,aAAO,CAAP;AACH,KAFD,MAEO,IAAID,IAAI,GAAGC,IAAX,EAAiB;AACpB,aAAO,CAAC,CAAR;AACH;;AACD,WAAO,CAAP;AACH;AACJ;AAED;;;;;;;;AAOO,SAASE,OAAT,CACHV,GADG,EAEHW,OAFG,EAKG;AACN,MAAMC,yBAAyB,GAAGD,OAAO,IAAIA,OAAO,CAACE,mBAAnB,GAAyC,QAAzC,GAAoD,SAAtF;AACA,SAAOb,GAAG,CACLc,SADE,CACQ,KADR,EACe;AADf,GAEFC,OAFE,CAEM,yBAFN,EAEiC,EAFjC,EAEqC;AAFrC,GAGFC,IAHE,GAGK;AAHL,GAIFD,OAJE,CAIMH,yBAJN,EAIiC,GAJjC,EAIsC;AAJtC,GAKFK,iBALE,EAAP,CAFM,CAOoB;AAC7B;AAED;;;;;;;;;AAQO,SAASC,kBAAT,CAA4BC,OAA5B,EAA6CC,SAA7C,EAA0E;AAC7E,MAAMC,cAAc,GAAGF,OAAO,CAACL,SAAR,CAAkB,KAAlB,EAAyBC,OAAzB,CAAiC,kBAAjC,EAAqD,EAArD,CAAvB;AACA,MAAMO,mBAAmB,GAAGF,SAAS,CAACN,SAAV,CAAoB,KAApB,EAA2BC,OAA3B,CAAmC,kBAAnC,EAAuD,EAAvD,CAA5B;AACA,MAAMQ,gBAAgB,GAAGF,cAAc,CAAChB,KAAf,CAAqB,IAAImB,MAAJ,YAAeF,mBAAf,QAAuC,GAAvC,CAArB,CAAzB;AAEA,MAAIG,cAAc,GAAG,CAArB;AACA,SAAOF,gBAAgB,CAACG,GAAjB,CAAqB,UAAAC,KAAK,EAAI;AACjC,QAAMC,KAAK,GAAGH,cAAd;AACAA,kBAAc,IAAIE,KAAK,CAACE,MAAxB;AACA,WAAOV,OAAO,CAACW,SAAR,CAAkBF,KAAlB,EAAyBH,cAAzB,CAAP;AACH,GAJM,CAAP;AAKH;;AAOD;;;;;;;;AAQO,SAASM,cAAT,CACHC,OADG,EAIiB;AAAA,MAFpBC,oBAEoB,uEAFY,KAEZ;AAAA,MADpBC,0BACoB,uEADkB,IAClB;AACpB;AACA,MAAMC,KAAK,GAAGH,OAAO,CAAC3B,KAAR,CAAc,IAAd,CAAd;AACA,MAAM+B,QAAQ,GAAGD,KAAK,CAACA,KAAK,CAACN,MAAN,GAAe,CAAhB,CAAtB,CAHoB,CAKpB;;AACA;;;;;;;;AAOA,WAASQ,qBAAT,CAA+BC,iBAA/B,EAAkD;AAC9C,QAAIC,QAAQ,GACR,OACA,GADA,GACM;AACN,oCAFA,GAEmC;AACnC,aAJJ,CAD8C,CAK/B;;AAEf,QAAID,iBAAJ,EAAuB;AACnBC,cAAQ,IAAI,KAAZ;AACH;;AAEDA,YAAQ,IAAI,GAAZ;AACA,WAAOA,QAAP;AACH;;AAED,MAAIC,QAAQ,GACR,MAAM;AACN,KADA,GAEA;AACA,MAHA,GAIAH,qBAAqB,CAAC,KAAD,CAJrB,GAKA,OALA,GAMA,GANA,GAMM;AACN;AACA,KARA,GASAA,qBAAqB,CAACH,0BAAD,CATrB,GAUA,OAVA,GAWA,GAXA,GAYA,WAbJ,CA5BoB,CAyCH;AAEjB;;AACA,MAAID,oBAAJ,EAA0B;AACtBO,YAAQ,GAAG,cAAcA,QAAzB;AACH;;AACD,MAAMC,KAAK,GAAG,IAAIjB,MAAJ,CAAWgB,QAAX,EAAqB,IAArB,CAAd;AACA,MAAME,KAAK,GAAGD,KAAK,CAACE,IAAN,CAAWP,QAAX,CAAd;;AACA,MAAIM,KAAJ,EAAW;AACP,WAAO;AACHE,cAAQ,EAAEF,KAAK,CAAC,CAAD,CADZ;AAEHA,WAAK,EAAEA,KAAK,CAAC,CAAD,CAAL,IAAYA,KAAK,CAAC,CAAD,CAFrB,CAE0B;;AAF1B,KAAP;AAIH,GAtDmB,CAwDpB;;;AACA,SAAO,IAAP;AACH;AAED,IAAMG,mBAAmB,GAAG,6CAA5B;AAEA;;;;;;;;;;;;AAWO,SAASC,WAAT,CAAqBC,GAArB,EAAkC;AACrC,MAAIA,GAAG,CAACL,KAAJ,CAAUG,mBAAV,CAAJ,EAAoC;AAChC,WAAOE,GAAP;AACH,GAFD,MAEO;AACH,WAAO,YAAYA,GAAnB;AACH;AACJ;AAED;;;;;;AAKO,SAASC,qBAAT,CAA+BhD,GAA/B,EAAoD;AACvD,SAAOA,GAAG,CAACiD,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8BlD,GAAG,CAACmD,KAAJ,CAAU,CAAV,CAArC;AACH;AAED;;;;;;AAKO,SAASC,cAAT,CAAwBC,QAAxB,EAAyD;AAC5D,SAAO,IAAIpE,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC1BoE,cAAU,CAACpE,OAAD,EAAUmE,QAAV,CAAV;AACH,GAFM,CAAP;AAGH,C;;AC7MD;;;;;;AAOO,IAAKE,EAAZ;AAMA;;;;;;;WANYA,E;AAAAA,I;AAAAA,I;AAAAA,I;GAAAA,E,KAAAA,E;;AAYL,SAASC,oBAAT,GAAoC;AACvC,MAAMC,SAAS,GAAGC,SAAS,CAACD,SAAV,IAAuBC,SAAS,CAACC,MAAjC,IAA2CC,MAAM,CAACC,KAApE;;AAEA,MAAI,WAAW7F,IAAX,CAAgByF,SAAhB,CAAJ,EAAgC;AAC5B,WAAOF,EAAE,CAACO,OAAV;AACH,GALsC,CAOvC;;;AACA,MAAI,mBAAmB9F,IAAnB,CAAwByF,SAAxB,KAAsC,CAACG,MAAM,CAACG,QAAlD,EAA4D;AACxD,WAAOR,EAAE,CAACS,GAAV;AACH;;AAED,SAAOT,EAAE,CAACU,OAAV;AACH,C;;AChCD;;;;;AASA;;;;;;AAMO,SAASC,iBAAT,CAA2BC,MAA3B,EAAwCC,QAAxC,EAA4D;AAAA;AAAA;AAAA;;AAAA;AAC/D,yBAAwBA,QAAxB,8HAAkC;AAAA,UAAvBC,SAAuB;;AAC9B,UAAIF,MAAM,YAAYE,SAAtB,EAAiC;AAC7B,eAAO,IAAP;AACH;AACJ;AAL8D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAO/D,SAAO,KAAP;AACH;AAED;;;;;;;;;AAQO,SAASC,eAAT,CACHC,KADG,EAEHC,GAFG,EAKL;AACE,MAAMC,MAAM,GAAG,EAAf;AADF;AAAA;AAAA;;AAAA;AAEE,0BAAmBF,KAAnB,mIAA0B;AAAA,UAAfG,IAAe;;AACtB,UAAIF,GAAG,IAAIE,IAAX,EAAiB;AACb,YAAI,EAAEA,IAAI,CAACF,GAAD,CAAJ,IAAaC,MAAf,CAAJ,EAA4B;AACxBA,gBAAM,CAACC,IAAI,CAACF,GAAD,CAAL,CAAN,GAAoB,EAApB;AACH;;AACDC,cAAM,CAACC,IAAI,CAACF,GAAD,CAAL,CAAN,CAAkBG,IAAlB,CAAuBD,IAAvB;AACH;AACJ;AATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUE,SAAOD,MAAP;AACH,C;;ACjDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AAAA;;;;;;AAOA,IAAIG,kBAAkB,GAAG,KAAzB;AAEA;;;;;;;AAMO,SAASC,KAAT,CAAeC,QAAf,EAA4C;AAC/C,MAAIA,QAAQ,KAAKC,SAAjB,EAA4B;AACxBH,sBAAkB,GAAGE,QAArB;AACH;;AAED,SAAOF,kBAAP;AACH;AAED;;;;;;;AAMO,SAAS1G,QAAT,GAAmC;AACtC,MAAI0G,kBAAJ,EAAwB;AAAA;;AACpB;AACA,gBAAAI,OAAO,EAACC,GAAR;AACH;AACJ;AAED;;;;;;;AAMO,SAASC,QAAT,GAAmC;AAAA;;AACtC,MAAI,CAACN,kBAAD,IAAuBO,YAAA,KAAyB,MAApD,EAA4D;AACxD;AACH,GAHqC,CAItC;;;AACA,eAAAH,OAAO,EAACI,KAAR;AACH;AAED;;;;;;;AAMO,SAASC,UAAT,GAAqC;AAAA;;AACxC,MAAI,CAACT,kBAAD,IAAuBO,YAAA,KAAyB,MAApD,EAA4D;AACxD;AACH,GAHuC,CAIxC;;;AACA,eAAAH,OAAO,EAACM,IAAR;AACH,C;;;;;;;;;;;;;;;;;;;;;;;;;AC9DD;;;;AAKA;AAEAC,iFAAO;AAAA;AAAA;AAAA;AAAA,uEAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACEC,oBADF,GACeC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CADf;;AAAA,eAEAF,UAFA;AAAA;AAAA;AAAA;;AAAA;AAAA,iBAG+B,uIAH/B;;AAAA;AAAA;AAGQG,sBAHR,SAGQA,YAHR;AAIAA,sBAAY;;AAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAD,GAAP,C;;;;;;;;;;;;;;;;;;;;;;ACPA;;;;AAcA,IAAIC,yBAAa,GAAG,IAApB;AACA,IAAIC,WAAsB,GAAG,EAA7B;AACA,IAAIC,SAA4B,GAAG,EAAnC;AAEA;;;;AAGO,SAASC,UAAT,GAAiC;AACpC,SAAOF,WAAP;AACH;AAED;;;;;AAIO,SAASG,cAAT,CAAwBC,QAAxB,EAA8C;AACjDH,WAAS,CAACnB,IAAV,CAAesB,QAAf;AACH;AAED;;;;AAGO,SAASC,4BAAT,CAA0BC,SAA1B,EAA6C;AAChDP,2BAAa,GAAGO,SAAhB;AACAL,WAAS,CAACM,OAAV,CAAkB,UAAAH,QAAQ;AAAA,WAAIA,QAAQ,EAAZ;AAAA,GAA1B;AACH;AAED;;;;AAGO,SAASI,gBAAT,GAA4B;AAC/B,SAAOT,yBAAP;AACH;AAED;;;;AAGO,SAASU,WAAT,CAAqBC,OAArB,EAAyC;AAC5CV,aAAW,0DAAOA,WAAP,gDAAuBU,OAAvB,EAAX;AACAT,WAAS,CAACM,OAAV,CAAkB,UAAAH,QAAQ;AAAA,WAAIA,QAAQ,EAAZ;AAAA,GAA1B;AACH;AAED;;;;AAGO,SAASO,YAAT,GAAwB;AAC3BX,aAAW,GAAG,EAAd;AACAC,WAAS,CAACM,OAAV,CAAkB,UAAAH,QAAQ;AAAA,WAAIA,QAAQ,EAAZ;AAAA,GAA1B;AACH,C;;;;;;;AC9DD;;;;AAKA;AACA;AACA;AAEA,IAAMQ,aAAa,GAAGC,eAAK,CAACC,aAAN,CAGnB;AACCJ,SAAO,EAAE,EADV;AAECX,eAAa,EAAE;AAFhB,CAHmB,CAAtB;AAQO,SAASgB,cAAT,CAAwBC,KAAxB,EAA+D;AAAA,kBACpCC,yBAAQ,CAACf,UAAU,EAAX,CAD4B;AAAA;AAAA,MAC3DQ,OAD2D;AAAA,MAClDQ,UADkD;;AAAA,mBAExBD,yBAAQ,CAACT,gBAAgB,EAAjB,CAFgB;AAAA;AAAA,MAE3DT,aAF2D;AAAA,MAE5CM,gBAF4C;;AAIlE,MAAI,CAACN,aAAL,EAAoB;AAChBP,+CAAU,CAAC,yCAAD,CAAV;AACH;;AAED2B,4BAAS,CAAC,YAAM;AACZD,cAAU,CAAChB,UAAU,EAAX,CAAV;AACAG,oBAAgB,CAACG,gBAAgB,EAAjB,CAAhB;AAEAL,kBAAc,CAAC,YAAM;AACjBe,gBAAU,CAAChB,UAAU,EAAX,CAAV;AACAG,sBAAgB,CAACG,gBAAgB,EAAjB,CAAhB;AACH,KAHa,CAAd;AAIH,GARQ,EAQN,CAACU,UAAD,EAAab,gBAAb,CARM,CAAT;AAUA,SACI,8BAAC,aAAD,CAAe,QAAf;AACI,SAAK,EAAE;AACHK,aAAO,EAAPA,OADG;AAEHX,mBAAa,EAAbA;AAFG;AADX,KAMKiB,KAAK,CAACI,QANX,CADJ;AAUH;AAEM,SAASC,aAAT,GAAyB;AAC5B,SAAOC,2BAAU,CAACV,aAAD,CAAjB;AACH,C;;;;;;;;;;;ACjDD;;;;AASA,IAAIW,gBAA+B,GAAG,EAAtC;AAEA;;;;AAGO,SAASC,gBAAT,CAA0BC,YAA1B,EAAuD;AAC1DF,kBAAgB,qBAAQE,YAAR,CAAhB;AACH;AAED;;;;AAGO,SAASC,iBAAT,GAA6B;AAChCH,kBAAgB,GAAG,EAAnB;AACH;AAED;;;;;;;;;AAQO,SAASI,SAAT,CAAmBxH,GAAnB,EAAgCyH,kBAAhC,EAAqE;AACxE;AACA,MAAIzH,GAAG,CAAC0H,MAAJ,CAAW,CAAX,EAAc,CAAd,MAAqB,GAAzB,EAA8B;AAC1B,WAAO1H,GAAG,CAAC0H,MAAJ,CAAW,CAAX,CAAP;AACH;;AAED,MAAIN,gBAAgB,CAACpH,GAAD,CAAhB,KAA0B+E,SAA9B,EAAyC;AACrC,WAAOqC,gBAAgB,CAACpH,GAAD,CAAvB;AACH;;AAED,SAAOyH,kBAAkB,KAAK1C,SAAvB,GAAmC0C,kBAAnC,GAAwDzH,GAA/D;AACH;AAED;;;;AAGO,IAAM2H,CAAC,GAAGH,SAAV,C;;ACjDP;;;;AAIA;AACA;AACA;;AAQA;;;;;AAKO,SAASI,eAAT,CAAyBf,KAAzB,EAAwC;AAAA,uBACRK,aAAa,EADL;AAAA,MACnCX,OADmC,kBACnCA,OADmC;AAAA,MAC1BX,aAD0B,kBAC1BA,aAD0B;;AAE3C,MAAI,CAACA,aAAL,EAAoB;AAChB,WAAO,IAAP;AACH;;AAED,MAAIiC,cAA8B,GAAG,IAArC;AAN2C;AAAA;AAAA;;AAAA;AAO3C,yBAAqBtB,OAArB,8HAA8B;AAAA,UAAnBuB,MAAmB;;AAC1B,UAAIA,MAAM,CAAC3B,SAAP,KAAqBU,KAAK,CAACkB,aAA/B,EAA8C;AAC1CF,sBAAc,GAAGC,MAAjB;AACH;AACJ;AAX0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAa3C,MAAI,CAACD,cAAL,EAAqB;AACjB,WAAO;AAAM,UAAI,EAAEhB,KAAK,CAACmB;AAAlB,4BAAmDnB,KAAK,CAACkB,aAAzD,CAAP;AACH;;AAED,MAAIE,cAAc,GAAGJ,cAAc,CAACK,YAAf,CAA4BrB,KAAK,CAACmB,aAAN,IAAuBpC,aAAnD,CAArB;;AACA,MAAI,CAACqC,cAAL,EAAqB;AACjBA,kBAAc,GAAGT,SAAS,CAACX,KAAK,CAACkB,aAAP,CAA1B;AACH;;AAED,SAAO;AAAM,QAAI,EAAElB,KAAK,CAACmB;AAAlB,KAAkCC,cAAlC,CAAP;AACH,C;;AC1CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAKA;AACA;AACA;;;;;;;;;ACPA;AAAA;AAAA;;;;;;;;;AAUA;AAEA;;;;;;;;;;AAUA;;AACAE,qBAAuB,GAAGC,kFAAQ,CAAC,WAAWC,OAAX,GAAgC,GAAjC,CAAlC,C","file":"addons/swagger-ui.min.js?5debb58719dc8adf5db2","sourcesContent":["/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { logDebug } from \"./debugUtils\";\n\n/** This should mirror extensions allowed in Vanilla\\ImageResizer.php */\nconst IMAGE_REGEX = /^image\\/(gif|jpe?g|png)/i;\n\n/**\n * A filter for use with [].filter\n *\n * Matches only image image type files.\n * @private\n *\n * @param file - A File object.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/File\n *\n * @returns Whether or not the file is an acceptable image\n */\nexport function isFileImage(file: File): boolean {\n    if (IMAGE_REGEX.test(file.type)) {\n        return true;\n    }\n\n    logDebug(\"Filtered out non-image file: \", file.name);\n    return false;\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\n/**\n * Get various information about a fraction.\n *\n * @param numerator The fraction numerator.\n * @param denominator The fraction denominator.\n */\nexport function simplifyFraction(numerator: number, denominator: number) {\n    const findGCD = (a, b) => {\n        return b ? findGCD(b, a % b) : a;\n    };\n    const gcd = findGCD(numerator, denominator);\n\n    numerator = numerator / gcd;\n    denominator = denominator / gcd;\n\n    return {\n        numerator,\n        denominator,\n        shorthand: denominator + \":\" + numerator,\n    };\n}\n","/**\n * Utility functions related to promises/async.\n *\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\ntype NormalCallback = (...args: any[]) => any;\ntype PromiseCallback = (...args: any[]) => Promise<any>;\n\nexport type PromiseOrNormalCallback = NormalCallback | PromiseCallback;\n\n/**\n * Resolve an array of functions that return promises sequentially.\n *\n * @param promiseFunctions - The functions to execute.\n *\n * @returns An array of all results in sequential order.\n *\n * @example\n * const urls = ['/url1', '/url2', '/url3']\n * const functions = urls.map(url => () => fetch(url))\n * resolvePromisesSequentially(funcs)\n *   .then(console.log)\n *   .catch(console.error)\n */\nexport function resolvePromisesSequentially(promiseFunctions: PromiseOrNormalCallback[]): Promise<any[]> {\n    if (!Array.isArray(promiseFunctions)) {\n        throw new Error(\"First argument needs to be an array of Promises\");\n    }\n\n    return new Promise((resolve, reject) => {\n        let count = 0;\n        let results = [];\n\n        function iterationFunction(previousPromise, currentPromise) {\n            return previousPromise\n                .then(result => {\n                    if (count++ !== 0) {\n                        results = results.concat(result);\n                    }\n\n                    return currentPromise(result, results, count);\n                })\n                .catch(err => reject(err));\n        }\n\n        promiseFunctions = promiseFunctions.concat(() => Promise.resolve());\n\n        promiseFunctions.reduce(iterationFunction, Promise.resolve(false)).then(() => {\n            resolve(results);\n        });\n    });\n}\n","/**\n * Utilities related to strings.\n *\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\n/**\n * A simple, fast method of hashing a string. Similar to Java's hash function.\n * https://stackoverflow.com/a/7616484/1486603\n *\n * @param str - The string to hash.\n *\n * @returns The hash code returned.\n */\nexport function hashString(str: string): number {\n    function hashReduce(prevHash, currVal) {\n        // tslint:disable-next-line:no-bitwise\n        return (prevHash << 5) - prevHash + currVal.charCodeAt(0);\n    }\n    return str.split(\"\").reduce(hashReduce, 0);\n}\n\ntype CompareReturn = -1 | 0 | 1;\n\n/**\n * Utility for sorting values. Similar to the <=> operator in PHP.\n *\n * @param val1 The first value to compare.\n * @param val2 The second value to compare.\n *\n * @returns -1, 0, or 1\n */\nexport function compare<T extends string | number>(val1: T, val2: T): CompareReturn {\n    if (typeof val1 === \"string\" && typeof val2 === \"string\") {\n        return val1.localeCompare(val2) as CompareReturn;\n    } else {\n        if (val1 > val2) {\n            return 1;\n        } else if (val1 < val2) {\n            return -1;\n        }\n        return 0;\n    }\n}\n\n/**\n * Parse a string into a URL friendly format.\n *\n * Eg. Why Uber isn’t spelled Über -> why-uber-isnt-spelled-uber\n *\n * @param str The string to parse.\n */\nexport function slugify(\n    str: string,\n    options?: {\n        allowMultipleDashes?: boolean;\n    },\n): string {\n    const whiteSpaceNormalizeRegexp = options && options.allowMultipleDashes ? /[\\s]+/g : /[-\\s]+/g;\n    return str\n        .normalize(\"NFD\") // Normalize accented characters into ASCII equivalents\n        .replace(/[^\\w\\s$*_+~.()'\"\\-!:@]/g, \"\") // REmove characters that don't URL encode well\n        .trim() // Trim whitespace\n        .replace(whiteSpaceNormalizeRegexp, \"-\") // Normalize whitespace\n        .toLocaleLowerCase(); // Convert to locale aware lowercase.\n}\n\n/**\n * Split a string in multiple pieces similar to String.prototype.split but ignore most acccent characters.\n *\n * This will still return pieces with accents.\n *\n * @param toSplit The string to split.\n * @param splitWith The string to split with.\n */\nexport function splitStringLoosely(toSplit: string, splitWith: string): string[] {\n    const normalizedName = toSplit.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n    const normalizedSplitTerm = splitWith.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n    const normalizedPieces = normalizedName.split(new RegExp(`(${normalizedSplitTerm})`, \"i\"));\n\n    let charactersUsed = 0;\n    return normalizedPieces.map(piece => {\n        const start = charactersUsed;\n        charactersUsed += piece.length;\n        return toSplit.substring(start, charactersUsed);\n    });\n}\n\ninterface IMentionMatch {\n    match: string;\n    rawMatch: string;\n}\n\n/**\n * Custom matching to allow quotation marks in the matching string as well as spaces.\n * Spaces make things more complicated.\n *\n * @param subtext - The string to be tested.\n * @param shouldStartWithSpace - Should the pattern include a test for a whitespace prefix?\n * @returns Matching string if successful.  Null on failure to match.\n */\nexport function matchAtMention(\n    subtext: string,\n    shouldStartWithSpace: boolean = false,\n    requireQuotesForWhitespace: boolean = true,\n): IMentionMatch | null {\n    // Split the string at the lines to allow for a simpler regex.\n    const lines = subtext.split(\"\\n\");\n    const lastLine = lines[lines.length - 1];\n\n    // If you change this you MUST change the regex in src/scripts/__tests__/legacy.test.js !!!\n    /**\n     * Put together the non-excluded characters.\n     *\n     * @param {boolean} excludeWhiteSpace - Whether or not to exclude whitespace characters.\n     *\n     * @returns {string} A Regex string.\n     */\n    function nonExcludedCharacters(excludeWhiteSpace) {\n        let excluded =\n            \"[^\" +\n            '\"' + // Quote character\n            \"\\\\u0000-\\\\u001f\\\\u007f-\\\\u009f\" + // Control characters\n            \"\\\\u2028\"; // Line terminator\n\n        if (excludeWhiteSpace) {\n            excluded += \"\\\\s\";\n        }\n\n        excluded += \"]\";\n        return excluded;\n    }\n\n    let regexStr =\n        \"@\" + // @ Symbol triggers the match\n        \"(\" +\n        // One or more non-greedy characters that aren't excluded. Whitespace is allowed, but a starting quote is required.\n        '\"(' +\n        nonExcludedCharacters(false) +\n        '+?)\"?' +\n        \"|\" + // Or\n        // One or more non-greedy characters that aren't exluded. Whitespace may be excluded.\n        \"(\" +\n        nonExcludedCharacters(requireQuotesForWhitespace) +\n        '+?)\"?' +\n        \")\" +\n        \"(?:\\\\n|$)\"; // Newline terminates.\n\n    // Determined by at.who library\n    if (shouldStartWithSpace) {\n        regexStr = \"(?:^|\\\\s)\" + regexStr;\n    }\n    const regex = new RegExp(regexStr, \"gi\");\n    const match = regex.exec(lastLine);\n    if (match) {\n        return {\n            rawMatch: match[0],\n            match: match[2] || match[1], // Return either of the matching groups (quoted or unquoted).\n        };\n    }\n\n    // No match\n    return null;\n}\n\nconst SAFE_PROTOCOL_REGEX = /^(http:\\/\\/|https:\\/\\/|tel:|mailto:\\/\\/|\\/)/;\n\n/**\n * Sanitize a URL to ensure that it matches a whitelist of approved url schemes. If the url does not match one of these schemes, prepend `unsafe:` before it.\n *\n * Allowed protocols\n * - \"http://\",\n * - \"https://\",\n * - \"tel:\",\n * - \"mailto://\",\n *\n * @param url The url to sanitize.\n */\nexport function sanitizeUrl(url: string) {\n    if (url.match(SAFE_PROTOCOL_REGEX)) {\n        return url;\n    } else {\n        return \"unsafe:\" + url;\n    }\n}\n\n/**\n * Capitalize the first character of a string.\n *\n * @param str The string to modify.\n */\nexport function capitalizeFirstLetter(str: string): string {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n/**\n * Simple utility function for waiting some duration in promise.\n *\n * @param duration The amount of time to wait.\n */\nexport function promiseTimeout(duration: number): Promise<void> {\n    return new Promise(resolve => {\n        setTimeout(resolve, duration);\n    });\n}\n","/**\n * Utilities related to the user's system.\n *\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nexport enum OS {\n    IOS = \"ios\",\n    ANDROID = \"android\",\n    UNKNOWN = \"unkwown\",\n}\n\n/**\n * Provide relatively rough detection of mobile OS.\n *\n * This is not even close to perfect but can be used to try and offer,\n * OS specific input elements for things like datetimes.\n */\nexport function guessOperatingSystem(): OS {\n    const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n\n    if (/android/i.test(userAgent)) {\n        return OS.ANDROID;\n    }\n\n    // iOS detection from: http://stackoverflow.com/a/9039885/177710\n    if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\n        return OS.IOS;\n    }\n\n    return OS.UNKNOWN;\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\ninterface IClass {\n    new (): any;\n}\n\n/**\n * Determine if an instance is an instance of any of the listed classes.\n *\n * @param needle The instance.\n * @param haystack The classes to check.\n */\nexport function isInstanceOfOneOf(needle: any, haystack: IClass[]) {\n    for (const classItem of haystack) {\n        if (needle instanceof classItem) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n/**\n * Transform an array of objects and an map of objets with a given key.\n *\n * Objects that do not contain the given key are dropped.\n *\n * @param array The array to go through.\n * @param key The key to lookup.\n */\nexport function indexArrayByKey<T extends object>(\n    array: T[],\n    key: string,\n): {\n    [key: string]: T;\n} {\n    const object = {};\n    for (const item of array) {\n        if (key in item) {\n            if (!(item[key] in object)) {\n                object[item[key]] = [];\n            }\n            object[item[key]].push(item);\n        }\n    }\n    return object;\n}\n","/**\n * General utility functions.\n * This file should have NO external dependencies other than javascript.\n *\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nexport * from \"./src/debugUtils\";\nexport * from \"./src/fileUtils\";\nexport * from \"./src/mathUtils\";\nexport * from \"./src/promiseUtils\";\nexport * from \"./src/stringUtils\";\nexport * from \"./src/systemUtils\";\nexport * from \"./src/typeUtils\";\n","/**\n * Utility function related to logging/debugging.\n *\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nlet internalDebugValue = false;\n\n/**\n * Get or set the debug flag.\n *\n * @param newValue - The new value of debug.\n * @returns the current debug setting.\n */\nexport function debug(newValue?: boolean): boolean {\n    if (newValue !== undefined) {\n        internalDebugValue = newValue;\n    }\n\n    return internalDebugValue;\n}\n\n/**\n * Log something to console.\n * This only prints in debug mode.\n *\n * @param value - The value to log.\n */\nexport function logDebug(...value: any[]) {\n    if (internalDebugValue) {\n        // eslint-disable-next-line no-console\n        console.log(...value);\n    }\n}\n\n/**\n * Log an error to console.\n * This will not run in test mode _unless_ debug is set to true.\n *\n * @param value - The value to log.\n */\nexport function logError(...value: any[]) {\n    if (!internalDebugValue && process.env.NODE_ENV === \"test\") {\n        return;\n    }\n    // eslint-disable-next-line no-console\n    console.error(...value);\n}\n\n/**\n * Log a warning to console.\n * This will not run in test mode _unless_ debug is set to true.\n *\n * @param value - The value to log.\n */\nexport function logWarning(...value: any[]) {\n    if (!internalDebugValue && process.env.NODE_ENV === \"test\") {\n        return;\n    }\n    // eslint-disable-next-line no-console\n    console.warn(...value);\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { onReady } from \"@library/utility/appUtils\";\n\nonReady(async () => {\n    const mountPoint = document.getElementById(\"swagger-ui\");\n    if (mountPoint) {\n        const { mountSwagger } = await import(/* webpackChunkName: \"mountEditor\" */ \"../mountSwagger\");\n        mountSwagger();\n    }\n});\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nexport interface ILocale {\n    localeID: string;\n    localeKey: string;\n    regionalKey: string;\n    displayNames: {\n        [localeKey: string]: string;\n    };\n}\n\nlet currentLocale = \"en\";\nlet localeStore: ILocale[] = [];\nlet callbacks: Array<() => void> = [];\n\n/**\n * Get the available locales.\n */\nexport function getLocales(): ILocale[] {\n    return localeStore;\n}\n\n/**\n * Register a handler for if the locales change.\n * @param callback\n */\nexport function onLocaleChange(callback: () => void) {\n    callbacks.push(callback);\n}\n\n/**\n * Set the current locale.\n */\nexport function setCurrentLocale(localeKey: string) {\n    currentLocale = localeKey;\n    callbacks.forEach(callback => callback());\n}\n\n/**\n * Get the current locale.\n */\nexport function getCurrentLocale() {\n    return currentLocale;\n}\n\n/**\n * Load a group of locales.\n */\nexport function loadLocales(locales: ILocale[]) {\n    localeStore = [...localeStore, ...locales];\n    callbacks.forEach(callback => callback());\n}\n\n/**\n * Clear the loaded locales.\n */\nexport function clearLocales() {\n    localeStore = [];\n    callbacks.forEach(callback => callback());\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { ILocale, getLocales, onLocaleChange, getCurrentLocale } from \"./localeStore\";\nimport { logWarning } from \"@vanilla/utils\";\n\nconst LocaleContext = React.createContext<{\n    locales: ILocale[];\n    currentLocale: string | null;\n}>({\n    locales: [],\n    currentLocale: null,\n});\n\nexport function LocaleProvider(props: { children?: React.ReactNode }) {\n    const [locales, setLocales] = useState(getLocales());\n    const [currentLocale, setCurrentLocale] = useState(getCurrentLocale());\n\n    if (!currentLocale) {\n        logWarning(\"No locale loaded for <LocaleProvider />\");\n    }\n\n    useEffect(() => {\n        setLocales(getLocales());\n        setCurrentLocale(getCurrentLocale());\n\n        onLocaleChange(() => {\n            setLocales(getLocales());\n            setCurrentLocale(getCurrentLocale());\n        });\n    }, [setLocales, setCurrentLocale]);\n\n    return (\n        <LocaleContext.Provider\n            value={{\n                locales,\n                currentLocale,\n            }}\n        >\n            {props.children}\n        </LocaleContext.Provider>\n    );\n}\n\nexport function useLocaleInfo() {\n    return useContext(LocaleContext);\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\ninterface ITranslations {\n    [key: string]: string;\n}\n\nlet translationStore: ITranslations = {};\n\n/**\n * Load a set of key value pairs as translation resources.\n */\nexport function loadTranslations(translations: ITranslations) {\n    translationStore = { ...translations };\n}\n\n/**\n * Clear all translation resources.\n */\nexport function clearTranslations() {\n    translationStore = {};\n}\n\n/**\n * Translate a string into the current locale.\n *\n * @param str - The string to translate.\n * @param defaultTranslation - The default translation to use.\n *\n * @returns Returns the translation or the default.\n */\nexport function translate(str: string, defaultTranslation?: string): string {\n    // Codes that begin with @ are considered literals.\n    if (str.substr(0, 1) === \"@\") {\n        return str.substr(1);\n    }\n\n    if (translationStore[str] !== undefined) {\n        return translationStore[str];\n    }\n\n    return defaultTranslation !== undefined ? defaultTranslation : str;\n}\n\n/**\n * The t function is an alias for translate.\n */\nexport const t = translate;\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license Proprietary\n */\nimport React from \"react\";\nimport { useLocaleInfo } from \"./LocaleProvider\";\nimport { translate } from \"./translationStore\";\nimport { ILocale } from \"./localeStore\";\n\ninterface IProps {\n    localeContent: string; // The locale key to translate into a full name.\n    displayLocale?: string; // The language to use for the display.\n}\n\n/**\n * Component for displaying a locale translated into a different locale.\n *\n * Currently this relies on the subcommuntiies endpoint to provide all translations for active locale.s\n */\nexport function LocaleDisplayer(props: IProps) {\n    const { locales, currentLocale } = useLocaleInfo();\n    if (!currentLocale) {\n        return null;\n    }\n\n    let selectedLocale: ILocale | null = null;\n    for (const locale of locales) {\n        if (locale.localeKey === props.localeContent) {\n            selectedLocale = locale;\n        }\n    }\n\n    if (!selectedLocale) {\n        return <span lang={props.displayLocale}>Unknown Language {props.localeContent}</span>;\n    }\n\n    let fullLocaleName = selectedLocale.displayNames[props.displayLocale || currentLocale];\n    if (!fullLocaleName) {\n        fullLocaleName = translate(props.localeContent);\n    }\n\n    return <span lang={props.displayLocale}>{fullLocaleName}</span>;\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nexport * from \"./LocaleDisplayer\";\nexport * from \"./localeStore\";\nexport * from \"./translationStore\";\nexport * from \"./LocaleProvider\";\n","/**\n * Set wepback's public path.\n * Otherwise the lookups of dynamically imported webpack files can fail on sites that have a different webroot\n * Eg. installed in a subfolder / using Reverse Proxy.\n *\n * @author Adam Charron <adam.c@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { assetUrl } from \"@library/utility/appUtils\";\n\n/**\n * This needs to be a free variable.\n *\n * Webpack does some magic to make this work.\n * It you try and set a local or global version of it, it WILL NOT work.\n *\n * @see https://stackoverflow.com/questions/12934929/what-are-free-variables\n * @see https://webpack.js.org/configuration/output/#output-publicpath\n * @see https://github.com/webpack/webpack/issues/2776#issuecomment-233208623\n */\n// @ts-ignore: Cannot find variable warning. See comment aboe.\n__webpack_public_path__ = assetUrl(\"/dist/\" + __BUILD__SECTION__ + \"/\");\n"],"sourceRoot":""}