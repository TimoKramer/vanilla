var vanillaadmin =
(window["webpackJsonpvanillaadmin"] = window["webpackJsonpvanillaadmin"] || []).push([[5],{

/***/ 16:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./packages/vanilla-utils/src/debugUtils.ts
var debugUtils = __webpack_require__(26);

// CONCATENATED MODULE: ./packages/vanilla-utils/src/fileUtils.ts
/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

/** This should mirror extensions allowed in Vanilla\ImageResizer.php */

var IMAGE_REGEX = /^image\/(gif|jpe?g|png)/i;
/**
 * A filter for use with [].filter
 *
 * Matches only image image type files.
 * @private
 *
 * @param file - A File object.
 * @see https://developer.mozilla.org/en-US/docs/Web/API/File
 *
 * @returns Whether or not the file is an acceptable image
 */

function isFileImage(file) {
  if (IMAGE_REGEX.test(file.type)) {
    return true;
  }

  Object(debugUtils["b" /* logDebug */])("Filtered out non-image file: ", file.name);
  return false;
}
// CONCATENATED MODULE: ./packages/vanilla-utils/src/mathUtils.ts
/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

/**
 * Get various information about a fraction.
 *
 * @param numerator The fraction numerator.
 * @param denominator The fraction denominator.
 */
function simplifyFraction(numerator, denominator) {
  var findGCD = function findGCD(a, b) {
    return b ? findGCD(b, a % b) : a;
  };

  var gcd = findGCD(numerator, denominator);
  numerator = numerator / gcd;
  denominator = denominator / gcd;
  return {
    numerator: numerator,
    denominator: denominator,
    shorthand: denominator + ":" + numerator
  };
}
// CONCATENATED MODULE: ./packages/vanilla-utils/src/promiseUtils.ts
/**
 * Utility functions related to promises/async.
 *
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

/**
 * Resolve an array of functions that return promises sequentially.
 *
 * @param promiseFunctions - The functions to execute.
 *
 * @returns An array of all results in sequential order.
 *
 * @example
 * const urls = ['/url1', '/url2', '/url3']
 * const functions = urls.map(url => () => fetch(url))
 * resolvePromisesSequentially(funcs)
 *   .then(console.log)
 *   .catch(console.error)
 */
function resolvePromisesSequentially(promiseFunctions) {
  if (!Array.isArray(promiseFunctions)) {
    throw new Error("First argument needs to be an array of Promises");
  }

  return new Promise(function (resolve, reject) {
    var count = 0;
    var results = [];

    function iterationFunction(previousPromise, currentPromise) {
      return previousPromise.then(function (result) {
        if (count++ !== 0) {
          results = results.concat(result);
        }

        return currentPromise(result, results, count);
      }).catch(function (err) {
        return reject(err);
      });
    }

    promiseFunctions = promiseFunctions.concat(function () {
      return Promise.resolve();
    });
    promiseFunctions.reduce(iterationFunction, Promise.resolve(false)).then(function () {
      resolve(results);
    });
  });
}
// CONCATENATED MODULE: ./packages/vanilla-utils/src/stringUtils.ts
/**
 * Utilities related to strings.
 *
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

/**
 * A simple, fast method of hashing a string. Similar to Java's hash function.
 * https://stackoverflow.com/a/7616484/1486603
 *
 * @param str - The string to hash.
 *
 * @returns The hash code returned.
 */
function hashString(str) {
  function hashReduce(prevHash, currVal) {
    // tslint:disable-next-line:no-bitwise
    return (prevHash << 5) - prevHash + currVal.charCodeAt(0);
  }

  return str.split("").reduce(hashReduce, 0);
}

/**
 * Utility for sorting values. Similar to the <=> operator in PHP.
 *
 * @param val1 The first value to compare.
 * @param val2 The second value to compare.
 *
 * @returns -1, 0, or 1
 */
function compare(val1, val2) {
  if (typeof val1 === "string" && typeof val2 === "string") {
    return val1.localeCompare(val2);
  } else {
    if (val1 > val2) {
      return 1;
    } else if (val1 < val2) {
      return -1;
    }

    return 0;
  }
}
/**
 * Parse a string into a URL friendly format.
 *
 * Eg. Why Uber isn’t spelled Über -> why-uber-isnt-spelled-uber
 *
 * @param str The string to parse.
 */

function slugify(str, options) {
  var whiteSpaceNormalizeRegexp = options && options.allowMultipleDashes ? /[\s]+/g : /[-\s]+/g;
  return str.normalize("NFD") // Normalize accented characters into ASCII equivalents
  .replace(/[^\w\s$*_+~.()'"\-!:@]/g, "") // REmove characters that don't URL encode well
  .trim() // Trim whitespace
  .replace(whiteSpaceNormalizeRegexp, "-") // Normalize whitespace
  .toLocaleLowerCase(); // Convert to locale aware lowercase.
}
/**
 * Split a string in multiple pieces similar to String.prototype.split but ignore most acccent characters.
 *
 * This will still return pieces with accents.
 *
 * @param toSplit The string to split.
 * @param splitWith The string to split with.
 */

function splitStringLoosely(toSplit, splitWith) {
  var normalizedName = toSplit.normalize("NFD").replace(/[\u0300-\u036f]/g, "");
  var normalizedSplitTerm = splitWith.normalize("NFD").replace(/[\u0300-\u036f]/g, "");
  var normalizedPieces = normalizedName.split(new RegExp("(".concat(normalizedSplitTerm, ")"), "i"));
  var charactersUsed = 0;
  return normalizedPieces.map(function (piece) {
    var start = charactersUsed;
    charactersUsed += piece.length;
    return toSplit.substring(start, charactersUsed);
  });
}

/**
 * Custom matching to allow quotation marks in the matching string as well as spaces.
 * Spaces make things more complicated.
 *
 * @param subtext - The string to be tested.
 * @param shouldStartWithSpace - Should the pattern include a test for a whitespace prefix?
 * @returns Matching string if successful.  Null on failure to match.
 */
function matchAtMention(subtext) {
  var shouldStartWithSpace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var requireQuotesForWhitespace = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  // Split the string at the lines to allow for a simpler regex.
  var lines = subtext.split("\n");
  var lastLine = lines[lines.length - 1]; // If you change this you MUST change the regex in src/scripts/__tests__/legacy.test.js !!!

  /**
   * Put together the non-excluded characters.
   *
   * @param {boolean} excludeWhiteSpace - Whether or not to exclude whitespace characters.
   *
   * @returns {string} A Regex string.
   */

  function nonExcludedCharacters(excludeWhiteSpace) {
    var excluded = "[^" + '"' + // Quote character
    "\\u0000-\\u001f\\u007f-\\u009f" + // Control characters
    "\\u2028"; // Line terminator

    if (excludeWhiteSpace) {
      excluded += "\\s";
    }

    excluded += "]";
    return excluded;
  }

  var regexStr = "@" + // @ Symbol triggers the match
  "(" + // One or more non-greedy characters that aren't excluded. Whitespace is allowed, but a starting quote is required.
  '"(' + nonExcludedCharacters(false) + '+?)"?' + "|" + // Or
  // One or more non-greedy characters that aren't exluded. Whitespace may be excluded.
  "(" + nonExcludedCharacters(requireQuotesForWhitespace) + '+?)"?' + ")" + "(?:\\n|$)"; // Newline terminates.
  // Determined by at.who library

  if (shouldStartWithSpace) {
    regexStr = "(?:^|\\s)" + regexStr;
  }

  var regex = new RegExp(regexStr, "gi");
  var match = regex.exec(lastLine);

  if (match) {
    return {
      rawMatch: match[0],
      match: match[2] || match[1] // Return either of the matching groups (quoted or unquoted).

    };
  } // No match


  return null;
}
var SAFE_PROTOCOL_REGEX = /^(http:\/\/|https:\/\/|tel:|mailto:\/\/|\/)/;
/**
 * Sanitize a URL to ensure that it matches a whitelist of approved url schemes. If the url does not match one of these schemes, prepend `unsafe:` before it.
 *
 * Allowed protocols
 * - "http://",
 * - "https://",
 * - "tel:",
 * - "mailto://",
 *
 * @param url The url to sanitize.
 */

function sanitizeUrl(url) {
  if (url.match(SAFE_PROTOCOL_REGEX)) {
    return url;
  } else {
    return "unsafe:" + url;
  }
}
/**
 * Capitalize the first character of a string.
 *
 * @param str The string to modify.
 */

function capitalizeFirstLetter(str) {
  return str.charAt(0).toUpperCase() + str.slice(1);
}
/**
 * Simple utility function for waiting some duration in promise.
 *
 * @param duration The amount of time to wait.
 */

function promiseTimeout(duration) {
  return new Promise(function (resolve) {
    setTimeout(resolve, duration);
  });
}
// CONCATENATED MODULE: ./packages/vanilla-utils/src/systemUtils.ts
/**
 * Utilities related to the user's system.
 *
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */
var OS;
/**
 * Provide relatively rough detection of mobile OS.
 *
 * This is not even close to perfect but can be used to try and offer,
 * OS specific input elements for things like datetimes.
 */

(function (OS) {
  OS["IOS"] = "ios";
  OS["ANDROID"] = "android";
  OS["UNKNOWN"] = "unkwown";
})(OS || (OS = {}));

function guessOperatingSystem() {
  var userAgent = navigator.userAgent || navigator.vendor || window.opera;

  if (/android/i.test(userAgent)) {
    return OS.ANDROID;
  } // iOS detection from: http://stackoverflow.com/a/9039885/177710


  if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {
    return OS.IOS;
  }

  return OS.UNKNOWN;
}
// CONCATENATED MODULE: ./packages/vanilla-utils/src/typeUtils.ts
/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

/**
 * Determine if an instance is an instance of any of the listed classes.
 *
 * @param needle The instance.
 * @param haystack The classes to check.
 */
function isInstanceOfOneOf(needle, haystack) {
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = haystack[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var classItem = _step.value;

      if (needle instanceof classItem) {
        return true;
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return != null) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return false;
}
/**
 * Transform an array of objects and an map of objets with a given key.
 *
 * Objects that do not contain the given key are dropped.
 *
 * @param array The array to go through.
 * @param key The key to lookup.
 */

function indexArrayByKey(array, key) {
  var object = {};
  var _iteratorNormalCompletion2 = true;
  var _didIteratorError2 = false;
  var _iteratorError2 = undefined;

  try {
    for (var _iterator2 = array[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
      var item = _step2.value;

      if (key in item) {
        if (!(item[key] in object)) {
          object[item[key]] = [];
        }

        object[item[key]].push(item);
      }
    }
  } catch (err) {
    _didIteratorError2 = true;
    _iteratorError2 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
        _iterator2.return();
      }
    } finally {
      if (_didIteratorError2) {
        throw _iteratorError2;
      }
    }
  }

  return object;
}
// CONCATENATED MODULE: ./packages/vanilla-utils/index.ts
/* concated harmony reexport debug */__webpack_require__.d(__webpack_exports__, "a", function() { return debugUtils["a" /* debug */]; });
/* concated harmony reexport logDebug */__webpack_require__.d(__webpack_exports__, "d", function() { return debugUtils["b" /* logDebug */]; });
/* concated harmony reexport logError */__webpack_require__.d(__webpack_exports__, "e", function() { return debugUtils["c" /* logError */]; });
/* concated harmony reexport logWarning */__webpack_require__.d(__webpack_exports__, "f", function() { return debugUtils["d" /* logWarning */]; });
/* unused concated harmony import isFileImage */
/* concated harmony reexport simplifyFraction */__webpack_require__.d(__webpack_exports__, "i", function() { return simplifyFraction; });
/* unused concated harmony import resolvePromisesSequentially */
/* concated harmony reexport hashString */__webpack_require__.d(__webpack_exports__, "b", function() { return hashString; });
/* unused concated harmony import compare */
/* concated harmony reexport slugify */__webpack_require__.d(__webpack_exports__, "j", function() { return slugify; });
/* unused concated harmony import splitStringLoosely */
/* concated harmony reexport matchAtMention */__webpack_require__.d(__webpack_exports__, "g", function() { return matchAtMention; });
/* concated harmony reexport sanitizeUrl */__webpack_require__.d(__webpack_exports__, "h", function() { return sanitizeUrl; });
/* unused concated harmony import capitalizeFirstLetter */
/* unused concated harmony import promiseTimeout */
/* unused concated harmony import OS */
/* unused concated harmony import guessOperatingSystem */
/* unused concated harmony import isInstanceOfOneOf */
/* concated harmony reexport indexArrayByKey */__webpack_require__.d(__webpack_exports__, "c", function() { return indexArrayByKey; });
/**
 * General utility functions.
 * This file should have NO external dependencies other than javascript.
 *
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */








/***/ }),

/***/ 26:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return debug; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return logDebug; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return logError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return logWarning; });
/**
 * Utility function related to logging/debugging.
 *
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */
var internalDebugValue = false;
/**
 * Get or set the debug flag.
 *
 * @param newValue - The new value of debug.
 * @returns the current debug setting.
 */

function debug(newValue) {
  if (newValue !== undefined) {
    internalDebugValue = newValue;
  }

  return internalDebugValue;
}
/**
 * Log something to console.
 * This only prints in debug mode.
 *
 * @param value - The value to log.
 */

function logDebug() {
  if (internalDebugValue) {
    var _console;

    // eslint-disable-next-line no-console
    (_console = console).log.apply(_console, arguments);
  }
}
/**
 * Log an error to console.
 * This will not run in test mode _unless_ debug is set to true.
 *
 * @param value - The value to log.
 */

function logError() {
  var _console2;

  if (!internalDebugValue && "production" === "test") {
    return;
  } // eslint-disable-next-line no-console


  (_console2 = console).error.apply(_console2, arguments);
}
/**
 * Log a warning to console.
 * This will not run in test mode _unless_ debug is set to true.
 *
 * @param value - The value to log.
 */

function logWarning() {
  var _console3;

  if (!internalDebugValue && "production" === "test") {
    return;
  } // eslint-disable-next-line no-console


  (_console3 = console).warn.apply(_console3, arguments);
}

/***/ }),

/***/ 309:
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(51);
module.exports = __webpack_require__(310);


/***/ }),

/***/ 310:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(17);
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);
/* harmony import */ var _library_utility_appUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(5);



/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

Object(_library_utility_appUtils__WEBPACK_IMPORTED_MODULE_2__[/* onReady */ "g"])(
/*#__PURE__*/
Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(
/*#__PURE__*/
_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {
  var mountPoint, _ref2, mountSwagger;

  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          mountPoint = document.getElementById("swagger-ui");

          if (!mountPoint) {
            _context.next = 7;
            break;
          }

          _context.next = 4;
          return Promise.all(/* import() | mountEditor */[__webpack_require__.e(0), __webpack_require__.e(8)]).then(__webpack_require__.bind(null, 314));

        case 4:
          _ref2 = _context.sent;
          mountSwagger = _ref2.mountSwagger;
          mountSwagger();

        case 7:
        case "end":
          return _context.stop();
      }
    }
  }, _callee);
})));

/***/ }),

/***/ 37:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(0);
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 1 modules
var slicedToArray = __webpack_require__(19);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 2 modules
var toConsumableArray = __webpack_require__(29);

// CONCATENATED MODULE: ./packages/vanilla-i18n/src/localeStore.ts


/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */
var localeStore_currentLocale = "en";
var localeStore = [];
var callbacks = [];
/**
 * Get the available locales.
 */

function getLocales() {
  return localeStore;
}
/**
 * Register a handler for if the locales change.
 * @param callback
 */

function onLocaleChange(callback) {
  callbacks.push(callback);
}
/**
 * Set the current locale.
 */

function localeStore_setCurrentLocale(localeKey) {
  localeStore_currentLocale = localeKey;
  callbacks.forEach(function (callback) {
    return callback();
  });
}
/**
 * Get the current locale.
 */

function getCurrentLocale() {
  return localeStore_currentLocale;
}
/**
 * Load a group of locales.
 */

function loadLocales(locales) {
  localeStore = [].concat(Object(toConsumableArray["a" /* default */])(localeStore), Object(toConsumableArray["a" /* default */])(locales));
  callbacks.forEach(function (callback) {
    return callback();
  });
}
/**
 * Clear the loaded locales.
 */

function clearLocales() {
  localeStore = [];
  callbacks.forEach(function (callback) {
    return callback();
  });
}
// EXTERNAL MODULE: ./packages/vanilla-utils/index.ts + 6 modules
var vanilla_utils = __webpack_require__(16);

// CONCATENATED MODULE: ./packages/vanilla-i18n/src/LocaleProvider.tsx


/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */



var LocaleContext = react_default.a.createContext({
  locales: [],
  currentLocale: null
});
function LocaleProvider(props) {
  var _useState = Object(react["useState"])(getLocales()),
      _useState2 = Object(slicedToArray["a" /* default */])(_useState, 2),
      locales = _useState2[0],
      setLocales = _useState2[1];

  var _useState3 = Object(react["useState"])(getCurrentLocale()),
      _useState4 = Object(slicedToArray["a" /* default */])(_useState3, 2),
      currentLocale = _useState4[0],
      setCurrentLocale = _useState4[1];

  if (!currentLocale) {
    Object(vanilla_utils["f" /* logWarning */])("No locale loaded for <LocaleProvider />");
  }

  Object(react["useEffect"])(function () {
    setLocales(getLocales());
    setCurrentLocale(getCurrentLocale());
    onLocaleChange(function () {
      setLocales(getLocales());
      setCurrentLocale(getCurrentLocale());
    });
  }, [setLocales, setCurrentLocale]);
  return react_default.a.createElement(LocaleContext.Provider, {
    value: {
      locales: locales,
      currentLocale: currentLocale
    }
  }, props.children);
}
function useLocaleInfo() {
  return Object(react["useContext"])(LocaleContext);
}
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js
var defineProperty = __webpack_require__(3);

// CONCATENATED MODULE: ./packages/vanilla-i18n/src/translationStore.ts


function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { Object(defineProperty["a" /* default */])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */
var translationStore = {};
/**
 * Load a set of key value pairs as translation resources.
 */

function loadTranslations(translations) {
  translationStore = _objectSpread({}, translations);
}
/**
 * Clear all translation resources.
 */

function clearTranslations() {
  translationStore = {};
}
/**
 * Translate a string into the current locale.
 *
 * @param str - The string to translate.
 * @param defaultTranslation - The default translation to use.
 *
 * @returns Returns the translation or the default.
 */

function translate(str, defaultTranslation) {
  // Codes that begin with @ are considered literals.
  if (str.substr(0, 1) === "@") {
    return str.substr(1);
  }

  if (translationStore[str] !== undefined) {
    return translationStore[str];
  }

  return defaultTranslation !== undefined ? defaultTranslation : str;
}
/**
 * The t function is an alias for translate.
 */

var t = translate;
// CONCATENATED MODULE: ./packages/vanilla-i18n/src/LocaleDisplayer.tsx
/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license Proprietary
 */




/**
 * Component for displaying a locale translated into a different locale.
 *
 * Currently this relies on the subcommuntiies endpoint to provide all translations for active locale.s
 */
function LocaleDisplayer(props) {
  var _useLocaleInfo = useLocaleInfo(),
      locales = _useLocaleInfo.locales,
      currentLocale = _useLocaleInfo.currentLocale;

  if (!currentLocale) {
    return null;
  }

  var selectedLocale = null;
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = locales[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var locale = _step.value;

      if (locale.localeKey === props.localeContent) {
        selectedLocale = locale;
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return != null) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  if (!selectedLocale) {
    return react_default.a.createElement("span", {
      lang: props.displayLocale
    }, "Unknown Language ", props.localeContent);
  }

  var fullLocaleName = selectedLocale.displayNames[props.displayLocale || currentLocale];

  if (!fullLocaleName) {
    fullLocaleName = translate(props.localeContent);
  }

  return react_default.a.createElement("span", {
    lang: props.displayLocale
  }, fullLocaleName);
}
// CONCATENATED MODULE: ./packages/vanilla-i18n/src/index.ts
/* unused concated harmony import LocaleDisplayer */
/* unused concated harmony import getLocales */
/* unused concated harmony import onLocaleChange */
/* concated harmony reexport setCurrentLocale */__webpack_require__.d(__webpack_exports__, "d", function() { return localeStore_setCurrentLocale; });
/* unused concated harmony import getCurrentLocale */
/* concated harmony reexport loadLocales */__webpack_require__.d(__webpack_exports__, "b", function() { return loadLocales; });
/* unused concated harmony import clearLocales */
/* concated harmony reexport loadTranslations */__webpack_require__.d(__webpack_exports__, "c", function() { return loadTranslations; });
/* unused concated harmony import clearTranslations */
/* unused concated harmony import translate */
/* concated harmony reexport t */__webpack_require__.d(__webpack_exports__, "e", function() { return t; });
/* concated harmony reexport LocaleProvider */__webpack_require__.d(__webpack_exports__, "a", function() { return LocaleProvider; });
/* unused concated harmony import useLocaleInfo */
/**
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */





/***/ }),

/***/ 51:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _library_utility_appUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);
/**
 * Set wepback's public path.
 * Otherwise the lookups of dynamically imported webpack files can fail on sites that have a different webroot
 * Eg. installed in a subfolder / using Reverse Proxy.
 *
 * @author Adam Charron <adam.c@vanillaforums.com>
 * @copyright 2009-2018 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

/**
 * This needs to be a free variable.
 *
 * Webpack does some magic to make this work.
 * It you try and set a local or global version of it, it WILL NOT work.
 *
 * @see https://stackoverflow.com/questions/12934929/what-are-free-variables
 * @see https://webpack.js.org/configuration/output/#output-publicpath
 * @see https://github.com/webpack/webpack/issues/2776#issuecomment-233208623
 */
// @ts-ignore: Cannot find variable warning. See comment aboe.

__webpack_require__.p = Object(_library_utility_appUtils__WEBPACK_IMPORTED_MODULE_0__[/* assetUrl */ "b"])("/dist/" + "admin" + "/");

/***/ })

},[[309,1,0,2]]]);
//# sourceMappingURL=/api/v2/sourcemaps/admin/sourcemaps/hek1a/5debb58719dc8adf5db2