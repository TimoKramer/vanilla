{"version":3,"sources":["webpack://vanilla-forum/./plugins/rich-editor/src/scripts/editor/pieces/embedMenuStyles.ts","webpack://vanilla-forum/./packages/vanilla-utils/src/fileUtils.ts","webpack://vanilla-forum/./packages/vanilla-utils/src/mathUtils.ts","webpack://vanilla-forum/./packages/vanilla-utils/src/stringUtils.ts","webpack://vanilla-forum/./packages/vanilla-utils/src/systemUtils.ts","webpack://vanilla-forum/./packages/vanilla-utils/src/typeUtils.ts","webpack://vanilla-forum/./packages/vanilla-utils/index.ts","webpack://vanilla-forum/./plugins/rich-editor/src/scripts/flyouts/pieces/flyoutPosition.ts","webpack://vanilla-forum/./plugins/rich-editor/src/scripts/editor/pieces/EditorEventWall.tsx","webpack://vanilla-forum/./node_modules/moment/locale sync en","webpack://vanilla-forum/./plugins/rich-editor/src/scripts/editor/pieces/ImageEmbedMenu.tsx","webpack://vanilla-forum/./packages/vanilla-dom-utils/src/domData.ts","webpack://vanilla-forum/./packages/vanilla-dom-utils/src/emoji.ts","webpack://vanilla-forum/./packages/vanilla-dom-utils/src/EscapeListener.ts","webpack://vanilla-forum/./packages/vanilla-dom-utils/src/events.ts","webpack://vanilla-forum/./packages/vanilla-dom-utils/src/FocusWatcher.ts","webpack://vanilla-forum/./packages/vanilla-dom-utils/src/sanitization.ts","webpack://vanilla-forum/./packages/vanilla-dom-utils/src/scripts.ts","webpack://vanilla-forum/./packages/vanilla-dom-utils/src/shadowDom.tsx","webpack://vanilla-forum/./packages/vanilla-dom-utils/src/TabHandler.ts","webpack://vanilla-forum/./packages/vanilla-dom-utils/src/index.ts","webpack://vanilla-forum/./packages/vanilla-react-utils/src/Hoverable.tsx","webpack://vanilla-forum/./packages/vanilla-react-utils/src/mounting.ts","webpack://vanilla-forum/./packages/vanilla-react-utils/src/useEscapeListener.ts","webpack://vanilla-forum/./packages/vanilla-react-utils/src/useFocusWatcher.ts","webpack://vanilla-forum/./packages/vanilla-react-utils/src/useMeasure.ts","webpack://vanilla-forum/./packages/vanilla-react-utils/src/useLastValue.tsx","webpack://vanilla-forum/./packages/vanilla-react-utils/src/useThrowError.ts","webpack://vanilla-forum/./packages/vanilla-react-utils/src/index.ts","webpack://vanilla-forum/./packages/vanilla-utils/src/debugUtils.ts","webpack://vanilla-forum/./applications/dashboard/src/scripts/legacy/atwho.ts","webpack://vanilla-forum/./applications/dashboard/src/scripts/legacy/index.ts","webpack://vanilla-forum/./library/src/scripts/redux/utility.ts","webpack://vanilla-forum/./applications/dashboard/src/scripts/pages/authenticate/authenticatorsActions.ts","webpack://vanilla-forum/./applications/dashboard/src/scripts/pages/authenticate/authenticatorsReducer.ts","webpack://vanilla-forum/./applications/dashboard/src/scripts/pages/recoverPassword/recoverPasswordActions.ts","webpack://vanilla-forum/./applications/dashboard/src/scripts/pages/recoverPassword/recoverPasswordReducer.ts","webpack://vanilla-forum/./applications/dashboard/src/scripts/pages/authenticate/authenticateReducer.ts","webpack://vanilla-forum/./library/src/scripts/routing/DocumentTitle.tsx","webpack://vanilla-forum/./applications/dashboard/src/scripts/forms/Or.tsx","webpack://vanilla-forum/./applications/dashboard/src/scripts/pages/authenticate/components/SSOMethods.tsx","webpack://vanilla-forum/./library/src/scripts/forms/checkRadioStyles.ts","webpack://vanilla-forum/./library/src/scripts/forms/Checkbox.tsx","webpack://vanilla-forum/./library/src/scripts/forms/ButtonSubmit.tsx","webpack://vanilla-forum/./applications/dashboard/src/scripts/pages/authenticate/passwordActions.ts","webpack://vanilla-forum/./applications/dashboard/src/scripts/pages/authenticate/components/PasswordForm.tsx","webpack://vanilla-forum/./applications/dashboard/src/scripts/pages/authenticate/SignInPage.tsx","webpack://vanilla-forum/./applications/dashboard/src/scripts/pages/authenticate/PasswordPage.tsx","webpack://vanilla-forum/./applications/dashboard/src/scripts/pages/authenticate/components/RememberPasswordLink.tsx","webpack://vanilla-forum/./applications/dashboard/src/scripts/pages/recoverPassword/RecoverPasswordPage.tsx","webpack://vanilla-forum/./library/src/scripts/routing/NotFoundPage.tsx","webpack://vanilla-forum/./library/src/scripts/Router.tsx","webpack://vanilla-forum/./applications/dashboard/src/scripts/entries/forum.tsx","webpack://vanilla-forum/./library/src/scripts/features/notifications/NotificationsModel.ts","webpack://vanilla-forum/./packages/vanilla-i18n/src/localeStore.ts","webpack://vanilla-forum/./packages/vanilla-i18n/src/LocaleProvider.tsx","webpack://vanilla-forum/./packages/vanilla-i18n/src/translationStore.ts","webpack://vanilla-forum/./packages/vanilla-i18n/src/index.ts","webpack://vanilla-forum/./build/entries/public-path.ts"],"names":["embedMenuMediaQueries","useThemeCache","vars","embedContainerVariables","globalVars","globalVariables","noRoomForMenuOnLeft","styles","media","maxWidth","unit","dimensions","maxEmbedWidth","buttonIcon","size","gutter","half","embedMenuClasses","style","styleFactory","root","marginRight","form","display","width","percent","mediaQueriesEmbed","imageContainer","position","marginTop","paragraph","$nest","paddings","all","top","importantUnit","quarter","fonts","weight","weights","normal","lineHeight","lineHeights","base","color","meta","colors","fg","medium","align","verticalPadding","vertical","menuTransformWithGutter","menuTransformWithoutGutter","icon","sizes","default","embedMetaDataMenu","absolutePosition","topLeft","height","transform","zIndex","IMAGE_REGEX","isFileImage","file","test","type","logDebug","name","simplifyFraction","numerator","denominator","gcd","findGCD","a","b","shorthand","hashString","str","split","reduce","prevHash","currVal","charCodeAt","slugify","options","whiteSpaceNormalizeRegexp","allowMultipleDashes","normalize","replace","trim","toLocaleLowerCase","splitStringLoosely","toSplit","splitWith","normalizedName","normalizedSplitTerm","normalizedPieces","RegExp","charactersUsed","map","piece","start","length","substring","matchAtMention","subtext","shouldStartWithSpace","requireQuotesForWhitespace","lines","lastLine","nonExcludedCharacters","excludeWhiteSpace","excluded","regexStr","match","exec","rawMatch","OS","SAFE_PROTOCOL_REGEX","sanitizeUrl","url","indexArrayByKey","array","key","object","item","push","flyoutPosition","renderAbove","renderLeft","undefined","right","bottom","left","EDITOR_WALLED_EVENT","EDITOR_EVENT_WALL_CLASS","EditorEventWall","props","ref","useRef","useEffect","current","addEventListener","eventFlagger","removeEventListener","onClick","e","preventDefault","className","event","isEditorWalledEvent","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports","ImageEmbedMenu","classes","accessibleImageMenu","useState","initialAlt","alt","setAlt","device","useDevice","isVisible","internalSetVisible","inputRef","handleTextChange","useCallback","stopPropagation","target","value","onVisibilityChange","setVisible","newVisibility","resetValue","prevVisibility","useLastValue","focus","saveAndClose","onSave","classNames","title","t","buttonContents","openAsModal","Devices","MOBILE","XS","flyoutType","FlyoutType","FRAME","label","labelClassName","inputProps","required","onChange","placeholder","onKeyPress","justifyRight","baseClass","ButtonTypes","TEXT_PRIMARY","dataMap","WeakMap","setData","element","initialValue","has","get","set","getData","defaultValue","attributeString","hasAttribute","getAttribute","emojiSupportedCache","isEmojiSupported","canvas","document","createElement","getContext","ctx","fillText","getImageData","data","emojiOptions","convertToSafeEmojiCharacters","stringOrNode","twemoji","parse","EscapeListener","returnElement","callback","keydownListener","contains","activeElement","delegatedEventListeners","delegateEvent","eventName","filterSelector","scopeSelector","scope","functionKey","toString","querySelector","HTMLElement","eventHash","includes","wrappedCallback","closest","call","removeDelegatedEvent","getDraggedFile","dataTransfer","files","getPastedFile","clipboardData","items","Array","from","getAsFile","filter","Boolean","FocusWatcher","rootNode","changeHandler","handleFocusOut","handleFocusIn","handleClick","checkDomTreeHasFocus","triggeringElement","checkDomTreeWasClicked","clickedElement","this","setTimeout","relatedTarget","explicitOriginalTarget","body","hasFocus","escapeHTML","div","appendChild","createTextNode","innerHTML","ensureHtmlElement","selectorOrElement","loadEventCallbacks","rejectionCache","Map","ensureScript","scriptUrl","Promise","reject","existingScript","callbacks","head","getElementsByTagName","script","src","onerror","error","timeout","onload","clearTimeout","forEach","delete","prepareShadowRoot","cloneElement","newElementTag","html","ns","append","result","startsWith","remove","browserEscapesNoScript","escapedString","child","childNodes","nodeValue","unescapeHTML","newElement","classList","parentNode","insertBefore","attachShadow","mode","TabHandler","documentElement","excludedElements","excludedRoots","exemption","elementToFilter","excludedRoot","tabbableElements","tabbable","reverse","allowLooping","logError","tabbables","createExcludeFilterWithExemption","currentTabIndex","indexOf","targetIndex","filterAllExcluded","smoothscroll","polyfill","Hoverable","hasExecuted","once","onHover","hoverTimeout","handleHover","duration","dismissTimeout","children","onMouseEnter","mouseEnterHandler","onMouseLeave","mouseLeaveHandler","React","Component","mountReact","component","cleanupContainer","mountPoint","overwrite","container","parentElement","ReactDOM","render","firstElementChild","forceRenderStyles","useEscapeListener","actualRoot","escapeListener","stop","useFocusWatcher","bypass","useLayoutEffect","focusWatcher","useMeasure","x","y","toJSON","bounds","setContentRect","animationFrameId","ro","ResizeObserver","window","requestAnimationFrame","getBoundingClientRect","observe","cancelAnimationFrame","disconnect","useThrowError","setError","internalDebugValue","debug","newValue","console","log","logWarning","warn","atCache","atEmpty","minCharacters","getMeta","maxSuggestions","serverLimit","emojiData","emojis","emoji","emojiFormat","format","emojiAssetPath","assetPath","emojiList","entries","index","emojiImageUrl","parts","filename","basename","ext","emojiTemplate","flag","_matchAtMention","matchFakeEmoji","initializeAtComplete","editorElement","iframe","iframeWindow","contentWindow","$","atwho","at","tpl","limit","remote_filter","query","shouldContinueFiltering","filterString","i","l","slice","isQueryEmpty","hasOwnProperty","getJSON","formatUrl","q","isArray","before_insert","$li","username","requiresQuotation","hasQuotation","insert","highlighter","li","regexp","$1","$2","$3","$4","matcher","cWindow","insert_tpl","tplEval","on","offset","context","suggestionElement","view","$el","$inputor","parseInt","css","iframeOffset","leftCoordinate","topCoordinate","selectHeight","text","fontMirror","font","fontWidth","each","outerHeight","windowHeight","scrollPosition","scrollTop","newOffset","fn","onReady","onContent","gdn","atCompleteInit","generateApiActionCreators","requestType","successType","errorType","dummyResponseType","dummyMetaType","request","createApiRequestAction","success","response","payload","createApiSuccessAction","createApiErrorAction","apiThunk","endpoint","actionCreators","params","dispatch","apiv2","then","catch","axiosError","GET_USER_AUTHENTICATORS_REQUEST","GET_USER_AUTHENTICATORS_SUCCESS","GET_USER_AUTHENTICATORS_ERROR","getAuthenticatorsActions","getUserAuthenticators","initialState","status","LoadStatus","PENDING","POST_REQUEST_PASSWORD_REQUEST","POST_REQUEST_PASSWORD_ERROR","POST_REQUEST_PASSWORD_SUCCESS","AFTER_REQUEST_PASSWORD_SUCCESS_NAVIGATE","afterRequestPasswordSuccessNavigate","requestPasswordActions","postRequestPassword","authenticateReducer","combineReducers","authenticators","state","action","actions","LOADING","SUCCESS","ERROR","password","DocumentTitle","headTitle","useMemo","siteTitle","join","Or","inputBlockClasses","visible","labelText","PureComponent","SSOMethods","ssoMethods","method","methodStyles","backgroundColor","ui","foregroundColor","href","photoUrl","aria-hidden","buttonName","Paragraph","checkRadioVariables","formElementVars","formElementsVariables","themeVars","variableFactory","border","radius","mixBgAndFg","main","mainColors","bg","checked","elementaryColors","white","primary","hover","fade","opacity","checkBox","check","disk","radioButton","labelNote","fontSize","sizing","checkRadioClasses","flexHelper","marginLeft","cursor","userSelect","verticalAlign","iconContainer","defaultTransition","em","colorOut","borders","radioIcon","middleLeftOfParent","margin","checkIcon","middleOfParent","borderRadius","fullSizeOfParent","alignItems","justifyContent","diskIcon","input","srOnly","borderColor","important","disabledInput","flexWrap","whiteSpace","outline","px","spacer","margins","group","CheckBox","labelID","useUniqueID","isHorizontal","aria-labelledby","disabled","tabIndex","xmlns","viewBox","fill","d","ButtonSubmit","Button","submit","prefix","legacyMode","authenticatePasswordActions","postAuthenticatePassword","post","urlParms","URLSearchParams","location","PasswordForm","createRef","setState","rememberMe","authenticate","persist","getRequiredID","formDescribedBy","globalErrorMessage","getGlobalErrorMessage","passwordState","formDescriptionID","aria-describedby","onSubmit","handleSubmit","noValidate","isError","InputTextBlock","errors","getFieldErrors","usernameInput","allowEdit","handleUsernameChange","defaultUsername","passwordInput","handlePasswordChange","handleCheckBoxChange","to","allowSubmit","prevProps","select","withRedux","connect","withRouter","SignInPage","authenticatorState","loadAuthenticators","showPassword","titleID","PasswordPage","uniqueIDFromPrefix","RememberPasswordLink","RecoverPasswordPage","uniqueId","email","pageTitleID","pageTitle","requestPasswordState","onNavigateAway","handleEmailChange","emainInput","NotFoundPage","message","sprintf","toLowerCase","Router","onRouteChange","history","createBrowserHistory","listen","routes","_routes","disableDynamicRouting","LinkContextProvider","linkContext","sectionRoot","addRoutes","initAllUserContent","convertAllUserContent","registerReducer","notificationsByID","produce","nextState","NotificationsActions","GET_NOTIFICATIONS_REQUEST","GET_NOTIFICATIONS_RESPONSE","notification","notificationID","GET_NOTIFICATIONS_ERROR","MARK_ALL_READ_RESPONSE","read","reducer","exact","path","addComponent","AppContext","variablesOnly","currentLocale","localeStore","getLocales","setCurrentLocale","localeKey","getCurrentLocale","loadLocales","locales","LocaleContext","createContext","LocaleProvider","setLocales","Provider","translationStore","loadTranslations","translations","translate","defaultTranslation","substr","__webpack_public_path__","assetUrl"],"mappings":"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","file":"addons/dashboard.min.js?71c0a3c6039b928b12a5","sourcesContent":["/*\n * @author Stéphane LaFlèche <stephane.l@vanillaforums.com>\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { embedContainerVariables } from \"@library/embeddedContent/embedStyles\";\nimport { globalVariables } from \"@library/styles/globalStyleVars\";\nimport { absolutePosition, fonts, importantUnit, paddings, unit } from \"@library/styles/styleHelpers\";\nimport { styleFactory, useThemeCache } from \"@library/styles/styleUtils\";\nimport { percent } from \"csx\";\nimport { media } from \"typestyle\";\n\nexport const embedMenuMediaQueries = useThemeCache(() => {\n    const vars = embedContainerVariables();\n    const globalVars = globalVariables();\n    const noRoomForMenuOnLeft = styles => {\n        return media(\n            {\n                maxWidth: unit(vars.dimensions.maxEmbedWidth + 2 * globalVars.buttonIcon.size + globalVars.gutter.half),\n            },\n            styles,\n        );\n    };\n\n    return {\n        noRoomForMenuOnLeft,\n    };\n});\n\nexport const embedMenuClasses = useThemeCache(() => {\n    const style = styleFactory(\"imageEmbedMenu\");\n    const embedVars = embedContainerVariables();\n    const globalVars = globalVariables();\n\n    const root = style({\n        marginRight: \"auto\",\n    });\n\n    const form = style(\"form\", {\n        display: \"block\",\n        width: percent(100),\n    });\n\n    const mediaQueriesEmbed = embedMenuMediaQueries();\n\n    const imageContainer = style(\n        \"imageContainer\",\n        {\n            position: \"relative\",\n        },\n        mediaQueriesEmbed.noRoomForMenuOnLeft({\n            marginTop: unit(globalVars.buttonIcon.size),\n        }),\n    );\n\n    // Extra specific and defensive here because it's within userContent styles.\n    const paragraph = style(\"paragraph\", {\n        $nest: {\n            \"&&\": {\n                // Specificity required to override default label styles\n                ...paddings({\n                    all: 0,\n                    top: importantUnit(globalVars.gutter.quarter),\n                }),\n                ...fonts({\n                    weight: globalVars.fonts.weights.normal,\n                    lineHeight: globalVars.lineHeights.base,\n                    color: globalVars.meta.colors.fg,\n                    size: globalVars.fonts.size.medium,\n                    align: \"left\",\n                }),\n            },\n        },\n    });\n\n    const verticalPadding = style(\"verticalPadding\", {\n        ...paddings({\n            vertical: unit(globalVars.gutter.half),\n        }),\n    });\n\n    const menuTransformWithGutter = unit(globalVars.buttonIcon.size);\n    const menuTransformWithoutGutter = unit((globalVars.buttonIcon.size - globalVars.icon.sizes.default) / 2);\n\n    const embedMetaDataMenu = style(\n        \"embedMetaDataMenu\",\n        {\n            ...absolutePosition.topLeft(),\n            width: globalVars.buttonIcon.size,\n            height: globalVars.buttonIcon.size,\n            transform: `translateX(-${menuTransformWithGutter}) translateY(-${menuTransformWithoutGutter})`,\n            zIndex: 1,\n        },\n        mediaQueriesEmbed.noRoomForMenuOnLeft({\n            transform: `translateX(-${menuTransformWithoutGutter}) translateY(-${menuTransformWithGutter})`,\n        }),\n    );\n\n    return {\n        root,\n        form,\n        imageContainer,\n        paragraph,\n        verticalPadding,\n        embedMetaDataMenu,\n    };\n});\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { logDebug } from \"./debugUtils\";\n\n/** This should mirror extensions allowed in Vanilla\\ImageResizer.php */\nconst IMAGE_REGEX = /^image\\/(gif|jpe?g|png)/i;\n\n/**\n * A filter for use with [].filter\n *\n * Matches only image image type files.\n * @private\n *\n * @param file - A File object.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/File\n *\n * @returns Whether or not the file is an acceptable image\n */\nexport function isFileImage(file: File): boolean {\n    if (IMAGE_REGEX.test(file.type)) {\n        return true;\n    }\n\n    logDebug(\"Filtered out non-image file: \", file.name);\n    return false;\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\n/**\n * Get various information about a fraction.\n *\n * @param numerator The fraction numerator.\n * @param denominator The fraction denominator.\n */\nexport function simplifyFraction(numerator: number, denominator: number) {\n    const findGCD = (a, b) => {\n        return b ? findGCD(b, a % b) : a;\n    };\n    const gcd = findGCD(numerator, denominator);\n\n    numerator = numerator / gcd;\n    denominator = denominator / gcd;\n\n    return {\n        numerator,\n        denominator,\n        shorthand: denominator + \":\" + numerator,\n    };\n}\n","/**\n * Utilities related to strings.\n *\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\n/**\n * A simple, fast method of hashing a string. Similar to Java's hash function.\n * https://stackoverflow.com/a/7616484/1486603\n *\n * @param str - The string to hash.\n *\n * @returns The hash code returned.\n */\nexport function hashString(str: string): number {\n    function hashReduce(prevHash, currVal) {\n        // tslint:disable-next-line:no-bitwise\n        return (prevHash << 5) - prevHash + currVal.charCodeAt(0);\n    }\n    return str.split(\"\").reduce(hashReduce, 0);\n}\n\ntype CompareReturn = -1 | 0 | 1;\n\n/**\n * Utility for sorting values. Similar to the <=> operator in PHP.\n *\n * @param val1 The first value to compare.\n * @param val2 The second value to compare.\n *\n * @returns -1, 0, or 1\n */\nexport function compare<T extends string | number>(val1: T, val2: T): CompareReturn {\n    if (typeof val1 === \"string\" && typeof val2 === \"string\") {\n        return val1.localeCompare(val2) as CompareReturn;\n    } else {\n        if (val1 > val2) {\n            return 1;\n        } else if (val1 < val2) {\n            return -1;\n        }\n        return 0;\n    }\n}\n\n/**\n * Parse a string into a URL friendly format.\n *\n * Eg. Why Uber isn’t spelled Über -> why-uber-isnt-spelled-uber\n *\n * @param str The string to parse.\n */\nexport function slugify(\n    str: string,\n    options?: {\n        allowMultipleDashes?: boolean;\n    },\n): string {\n    const whiteSpaceNormalizeRegexp = options && options.allowMultipleDashes ? /[\\s]+/g : /[-\\s]+/g;\n    return str\n        .normalize(\"NFD\") // Normalize accented characters into ASCII equivalents\n        .replace(/[^\\w\\s$*_+~.()'\"\\-!:@]/g, \"\") // REmove characters that don't URL encode well\n        .trim() // Trim whitespace\n        .replace(whiteSpaceNormalizeRegexp, \"-\") // Normalize whitespace\n        .toLocaleLowerCase(); // Convert to locale aware lowercase.\n}\n\n/**\n * Split a string in multiple pieces similar to String.prototype.split but ignore most acccent characters.\n *\n * This will still return pieces with accents.\n *\n * @param toSplit The string to split.\n * @param splitWith The string to split with.\n */\nexport function splitStringLoosely(toSplit: string, splitWith: string): string[] {\n    const normalizedName = toSplit.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n    const normalizedSplitTerm = splitWith.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n    const normalizedPieces = normalizedName.split(new RegExp(`(${normalizedSplitTerm})`, \"i\"));\n\n    let charactersUsed = 0;\n    return normalizedPieces.map(piece => {\n        const start = charactersUsed;\n        charactersUsed += piece.length;\n        return toSplit.substring(start, charactersUsed);\n    });\n}\n\ninterface IMentionMatch {\n    match: string;\n    rawMatch: string;\n}\n\n/**\n * Custom matching to allow quotation marks in the matching string as well as spaces.\n * Spaces make things more complicated.\n *\n * @param subtext - The string to be tested.\n * @param shouldStartWithSpace - Should the pattern include a test for a whitespace prefix?\n * @returns Matching string if successful.  Null on failure to match.\n */\nexport function matchAtMention(\n    subtext: string,\n    shouldStartWithSpace: boolean = false,\n    requireQuotesForWhitespace: boolean = true,\n): IMentionMatch | null {\n    // Split the string at the lines to allow for a simpler regex.\n    const lines = subtext.split(\"\\n\");\n    const lastLine = lines[lines.length - 1];\n\n    // If you change this you MUST change the regex in src/scripts/__tests__/legacy.test.js !!!\n    /**\n     * Put together the non-excluded characters.\n     *\n     * @param {boolean} excludeWhiteSpace - Whether or not to exclude whitespace characters.\n     *\n     * @returns {string} A Regex string.\n     */\n    function nonExcludedCharacters(excludeWhiteSpace) {\n        let excluded =\n            \"[^\" +\n            '\"' + // Quote character\n            \"\\\\u0000-\\\\u001f\\\\u007f-\\\\u009f\" + // Control characters\n            \"\\\\u2028\"; // Line terminator\n\n        if (excludeWhiteSpace) {\n            excluded += \"\\\\s\";\n        }\n\n        excluded += \"]\";\n        return excluded;\n    }\n\n    let regexStr =\n        \"@\" + // @ Symbol triggers the match\n        \"(\" +\n        // One or more non-greedy characters that aren't excluded. Whitespace is allowed, but a starting quote is required.\n        '\"(' +\n        nonExcludedCharacters(false) +\n        '+?)\"?' +\n        \"|\" + // Or\n        // One or more non-greedy characters that aren't exluded. Whitespace may be excluded.\n        \"(\" +\n        nonExcludedCharacters(requireQuotesForWhitespace) +\n        '+?)\"?' +\n        \")\" +\n        \"(?:\\\\n|$)\"; // Newline terminates.\n\n    // Determined by at.who library\n    if (shouldStartWithSpace) {\n        regexStr = \"(?:^|\\\\s)\" + regexStr;\n    }\n    const regex = new RegExp(regexStr, \"gi\");\n    const match = regex.exec(lastLine);\n    if (match) {\n        return {\n            rawMatch: match[0],\n            match: match[2] || match[1], // Return either of the matching groups (quoted or unquoted).\n        };\n    }\n\n    // No match\n    return null;\n}\n\nconst SAFE_PROTOCOL_REGEX = /^(http:\\/\\/|https:\\/\\/|tel:|mailto:\\/\\/|\\/)/;\n\n/**\n * Sanitize a URL to ensure that it matches a whitelist of approved url schemes. If the url does not match one of these schemes, prepend `unsafe:` before it.\n *\n * Allowed protocols\n * - \"http://\",\n * - \"https://\",\n * - \"tel:\",\n * - \"mailto://\",\n *\n * @param url The url to sanitize.\n */\nexport function sanitizeUrl(url: string) {\n    if (url.match(SAFE_PROTOCOL_REGEX)) {\n        return url;\n    } else {\n        return \"unsafe:\" + url;\n    }\n}\n\n/**\n * Capitalize the first character of a string.\n *\n * @param str The string to modify.\n */\nexport function capitalizeFirstLetter(str: string): string {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n/**\n * Simple utility function for waiting some duration in promise.\n *\n * @param duration The amount of time to wait.\n */\nexport function promiseTimeout(duration: number): Promise<void> {\n    return new Promise(resolve => {\n        setTimeout(resolve, duration);\n    });\n}\n","/**\n * Utilities related to the user's system.\n *\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nexport enum OS {\n    IOS = \"ios\",\n    ANDROID = \"android\",\n    UNKNOWN = \"unkwown\",\n}\n\n/**\n * Provide relatively rough detection of mobile OS.\n *\n * This is not even close to perfect but can be used to try and offer,\n * OS specific input elements for things like datetimes.\n */\nexport function guessOperatingSystem(): OS {\n    const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n\n    if (/android/i.test(userAgent)) {\n        return OS.ANDROID;\n    }\n\n    // iOS detection from: http://stackoverflow.com/a/9039885/177710\n    if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\n        return OS.IOS;\n    }\n\n    return OS.UNKNOWN;\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\ninterface IClass {\n    new (): any;\n}\n\n/**\n * Determine if an instance is an instance of any of the listed classes.\n *\n * @param needle The instance.\n * @param haystack The classes to check.\n */\nexport function isInstanceOfOneOf(needle: any, haystack: IClass[]) {\n    for (const classItem of haystack) {\n        if (needle instanceof classItem) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n/**\n * Transform an array of objects and an map of objets with a given key.\n *\n * Objects that do not contain the given key are dropped.\n *\n * @param array The array to go through.\n * @param key The key to lookup.\n */\nexport function indexArrayByKey<T extends object>(\n    array: T[],\n    key: string,\n): {\n    [key: string]: T;\n} {\n    const object = {};\n    for (const item of array) {\n        if (key in item) {\n            if (!(item[key] in object)) {\n                object[item[key]] = [];\n            }\n            object[item[key]].push(item);\n        }\n    }\n    return object;\n}\n","/**\n * General utility functions.\n * This file should have NO external dependencies other than javascript.\n *\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nexport * from \"./src/debugUtils\";\nexport * from \"./src/fileUtils\";\nexport * from \"./src/mathUtils\";\nexport * from \"./src/promiseUtils\";\nexport * from \"./src/stringUtils\";\nexport * from \"./src/systemUtils\";\nexport * from \"./src/typeUtils\";\n","/*\n * @author Stéphane LaFlèche <stephane.l@vanillaforums.com>\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\n/*\n * Utility function to get positioning of flyout based on props.\n * @param renderAbove - Render flyout above button\n * @param renderLeft - Render flyout towards left\n * @ignore ignore - Do nothing - for legacy\n */\nexport function flyoutPosition(renderAbove: boolean, renderLeft: boolean, ignore: boolean = false): any {\n    if (!ignore) {\n        const top = !renderAbove ? \"100%\" : undefined;\n        const bottom = renderAbove ? \"100%\" : undefined;\n        const left = !renderLeft ? \"0\" : undefined;\n        const right = renderLeft ? \"0\" : undefined;\n        return { top, right, bottom, left };\n    } else {\n        return undefined;\n    }\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport React, { useRef, useEffect } from \"react\";\n\ninterface IProps extends React.PropsWithoutRef<JSX.IntrinsicElements[\"div\"]> {}\n\nconst EDITOR_WALLED_EVENT = \"isEditorWalledEvent\";\nconst EDITOR_EVENT_WALL_CLASS = \"editorEventWall\";\n\n/**\n * A react component that prevents events from propagating up to quill.\n *\n * This marks events so they can be ignored by our own event handlers in quill.\n * Currently this is only implemented for the FocusModule. See usages of isEditorWalledEvent\n */\nexport function EditorEventWall(props: IProps) {\n    const ref = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        const { current } = ref;\n        if (!current) {\n            return;\n        }\n\n        current.addEventListener(\"click\", eventFlagger);\n        current.addEventListener(\"mouseup\", eventFlagger);\n        current.addEventListener(\"mousedown\", eventFlagger);\n        current.addEventListener(\"keydown\", eventFlagger);\n        return () => {\n            current.removeEventListener(\"click\", eventFlagger);\n            current.removeEventListener(\"mouseup\", eventFlagger);\n            current.removeEventListener(\"mousedown\", eventFlagger);\n            current.removeEventListener(\"keydown\", eventFlagger);\n        };\n    }, [ref]);\n\n    return (\n        <div\n            ref={ref}\n            {...props}\n            onClick={e => {\n                e.preventDefault();\n            }}\n            className={EDITOR_EVENT_WALL_CLASS}\n        />\n    );\n}\n\n/**\n * Event listener that flags items originating from inside of HTMLElement inside an event wall.\n * @param event\n */\nconst eventFlagger = (event: Event) => {\n    event[EDITOR_WALLED_EVENT] = true;\n};\n\n/**\n * Determine if an event has been marked to be walled.\n */\nexport function isEditorWalledEvent(event: Event): boolean {\n    return !!(event as any)[EDITOR_WALLED_EVENT];\n}\n","var map = {\n\t\"./en-SG\": 101,\n\t\"./en-SG.js\": 101,\n\t\"./en-au\": 102,\n\t\"./en-au.js\": 102,\n\t\"./en-ca\": 103,\n\t\"./en-ca.js\": 103,\n\t\"./en-gb\": 104,\n\t\"./en-gb.js\": 104,\n\t\"./en-ie\": 105,\n\t\"./en-ie.js\": 105,\n\t\"./en-il\": 106,\n\t\"./en-il.js\": 106,\n\t\"./en-nz\": 107,\n\t\"./en-nz.js\": 107\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 168;","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport DropDown, { FlyoutType } from \"@library/flyouts/DropDown\";\nimport Button from \"@library/forms/Button\";\nimport { ButtonTypes } from \"@library/forms/buttonStyles\";\nimport InputTextBlock from \"@library/forms/InputTextBlock\";\nimport { accessibleImageMenu } from \"@library/icons/common\";\nimport { Devices, useDevice } from \"@library/layout/DeviceContext\";\nimport FrameBody from \"@library/layout/frame/FrameBody\";\nimport FrameFooter from \"@library/layout/frame/FrameFooter\";\nimport { t } from \"@library/utility/appUtils\";\nimport { EditorEventWall } from \"@rich-editor/editor/pieces/EditorEventWall\";\nimport { embedMenuClasses } from \"@rich-editor/editor/pieces/embedMenuStyles\";\nimport classNames from \"classnames\";\nimport React, { useCallback, useState, useRef, useEffect } from \"react\";\nimport { useLastValue } from \"@vanilla/react-utils\";\n\ninterface IProps {\n    onSave: (meta: IImageMeta) => void;\n    onVisibilityChange: (newIsVisible: boolean) => void;\n    className?: string;\n    initialAlt: string;\n}\n\nexport interface IImageMeta {\n    alt: string;\n}\n\n/**\n * A class for rendering Giphy embeds.\n */\nexport function ImageEmbedMenu(props: IProps) {\n    const classes = embedMenuClasses();\n    const icon = accessibleImageMenu();\n    const [alt, setAlt] = useState(props.initialAlt);\n    const device = useDevice();\n    const [isVisible, internalSetVisible] = useState(false);\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    const handleTextChange = useCallback(event => {\n        if (event) {\n            event.stopPropagation();\n            event.preventDefault();\n            setAlt(event.target.value || \"\");\n        }\n    }, []);\n\n    const { onVisibilityChange } = props;\n    const setVisible = (newVisibility: boolean, resetValue = true) => {\n        internalSetVisible(newVisibility);\n        onVisibilityChange(newVisibility);\n        if (resetValue && !newVisibility) {\n            setAlt(props.initialAlt);\n        }\n    };\n\n    // Focus the input when opened.\n    const prevVisibility = useLastValue(isVisible);\n    useEffect(() => {\n        if (!prevVisibility && isVisible && inputRef.current) {\n            inputRef.current && inputRef.current.focus();\n        }\n    }, [prevVisibility, isVisible, inputRef, onVisibilityChange, setAlt, props.initialAlt]);\n\n    const saveAndClose = () => {\n        props.onSave({\n            alt,\n        });\n        setVisible(false, false);\n    };\n\n    return (\n        <div\n            className={classNames(\n                classes.root,\n                \"u-excludeFromPointerEvents\",\n                classes.embedMetaDataMenu,\n                props.className,\n            )}\n        >\n            <EditorEventWall>\n                <DropDown\n                    title={t(\"Alt Text\")}\n                    buttonContents={icon}\n                    className={classNames(\"u-excludeFromPointerEvents\")}\n                    onVisibilityChange={setVisible}\n                    isVisible={isVisible}\n                    openAsModal={device === Devices.MOBILE || device === Devices.XS}\n                    flyoutType={FlyoutType.FRAME}\n                >\n                    {/* We can't use an actual form submit because we're in a nested form. */}\n                    <form className={classes.form}>\n                        <FrameBody className={classes.verticalPadding}>\n                            <InputTextBlock\n                                label={t(\"Alternative text helps users with accessibility concerns and improves SEO.\")}\n                                labelClassName={classes.paragraph}\n                                inputProps={{\n                                    required: true,\n                                    value: alt,\n                                    onChange: handleTextChange,\n                                    inputRef,\n                                    placeholder: t(\"Example: Image of a Coffee\"),\n                                    onKeyPress: (event: React.KeyboardEvent) => {\n                                        if (event.key === \"Enter\") {\n                                            event.preventDefault();\n                                            event.stopPropagation();\n                                            saveAndClose();\n                                        }\n                                    },\n                                }}\n                            />\n                        </FrameBody>\n                        <FrameFooter justifyRight={true}>\n                            <Button\n                                baseClass={ButtonTypes.TEXT_PRIMARY}\n                                onClick={e => {\n                                    e.preventDefault();\n                                    e.stopPropagation();\n                                    saveAndClose();\n                                }}\n                            >\n                                {t(\"Save\")}\n                            </Button>\n                        </FrameFooter>\n                    </form>\n                </DropDown>\n            </EditorEventWall>\n        </div>\n    );\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\n/**\n * Get the form data out of a form element.\n *\n * @param formElement - The element to get the data out of.\n *\n * @returns {Object}\n */\nexport function getFormData(formElement: Node | null) {\n    if (!(formElement instanceof HTMLFormElement)) {\n        return {};\n    }\n\n    const data = new FormData(formElement) as any;\n    const result = {};\n\n    data.forEach((key, value) => {\n        result[key] = value;\n    });\n\n    return result;\n}\n\n/**\n * Toggle any attribute on an element.\n *\n * @param element - The element to toggle on.\n * @param attribute - The attribute to toggle.\n */\nexport function toggleAttribute(element: Element, attribute: string) {\n    const newValue = element.getAttribute(attribute) === \"false\";\n    element.setAttribute(attribute, newValue ? \"true\" : \"false\");\n}\n\nconst dataMap = new WeakMap();\n\n/**\n * Set a piece of data specific to a DOM Element. Similar to `$.data`.\n *\n * @param element - The DOM Element to assosciate the data with.\n * @param key - The key to assosciate the data with.\n * @param value - The value to store.\n */\nexport function setData(element: Element, key: string, value: any) {\n    const initialValue = dataMap.has(element) ? dataMap.get(element) : {};\n    initialValue[key] = value;\n\n    dataMap.set(element, initialValue);\n}\n\n/**\n * Get a piece of data specific to a DOM Element. Similar to `$.data`.\n *\n * @param element - The DOM Element to lookup.\n * @param key - The key to lookup.\n * @param defaultValue - A value to use if the element or key aren't found.\n */\nexport function getData(element: Element, key: string, defaultValue?: any) {\n    if (dataMap.has(element) && dataMap.get(element)[key]) {\n        return dataMap.get(element)[key];\n    }\n\n    const attributeString = `data-${key}`;\n\n    if (element.hasAttribute(attributeString)) {\n        return element.getAttribute(attributeString);\n    }\n\n    return defaultValue;\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport twemoji from \"twemoji\";\n\nlet emojiSupportedCache: boolean | null = null;\n\n/**\n * Determine if the browser/OS combo has support for real unicode emojis.\n */\nexport function isEmojiSupported() {\n    if (emojiSupportedCache !== null) {\n        return emojiSupportedCache;\n    }\n\n    if (process.env.NODE_ENV !== \"test\") {\n        // Test environment\n        const canvas = document.createElement(\"canvas\");\n        if (canvas.getContext && canvas.getContext(\"2d\")) {\n            const ctx = document.createElement(\"canvas\").getContext(\"2d\");\n            if (ctx) {\n                ctx.fillText(\"😗\", -2, 4);\n                emojiSupportedCache = ctx.getImageData(0, 0, 1, 1).data[3] > 0;\n            } else {\n                emojiSupportedCache = false;\n            }\n        } else {\n            emojiSupportedCache = false;\n        }\n    } else {\n        emojiSupportedCache = true;\n    }\n\n    return emojiSupportedCache;\n}\n\nconst emojiOptions = {\n    className: \"fallBackEmoji\",\n    size: \"72x72\",\n};\n\n/**\n * Returns either native emoji or fallback image\n *\n * @param stringOrNode - A DOM Node or string to convert.\n */\nexport function convertToSafeEmojiCharacters(stringOrNode: string | Node) {\n    if (isEmojiSupported()) {\n        return stringOrNode;\n    }\n    return twemoji.parse(stringOrNode, emojiOptions);\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\n/**\n * Register an keyboard listener for the escape key.\n */\nexport class EscapeListener {\n    /**\n     * @param root - The element to watch for the escape listener in.\n     * @param returnElement - The element to return to when escape is pressed.\n     * @param callback\n     */\n    public constructor(\n        private root: HTMLElement,\n        private returnElement?: HTMLElement,\n        private callback?: (event: KeyboardEvent) => void,\n    ) {}\n\n    /**\n     * Start the listeners.\n     */\n    public start = () => {\n        this.root.addEventListener(\"keydown\", this.keydownListener);\n    };\n\n    /**\n     * Stop the listeners.\n     */\n    public stop = () => {\n        this.root.removeEventListener(\"keydown\", this.keydownListener);\n    };\n\n    /**\n     * Handler that checks for the key of an keyboard event and:\n     *\n     * - Returns focous to the element from the constructor.\n     * - Calls the optional callback.\n     */\n    private keydownListener = (event: KeyboardEvent) => {\n        if (event.key === \"Escape\") {\n            if (this.root.contains(document.activeElement)) {\n                event.preventDefault();\n                this.returnElement && this.returnElement.focus();\n                this.callback && this.callback(event);\n            }\n        }\n    };\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { hashString } from \"@vanilla/utils\";\n\nconst delegatedEventListeners = {};\n\n/**\n * Create an event listener using event delegation.\n *\n * @param eventName - The Event to listen for.\n * @param filterSelector - A CSS selector to match against.\n * @param callback - The callback function. This gets passed the fired event.\n * @param scopeSelector - And element to scope the event listener to.\n *\n * @returns The hash of the event. Save this to use removeDelegatedEvent().\n */\nexport function delegateEvent(\n    eventName: string,\n    filterSelector: string,\n    callback: (event: Event, triggeringElement: HTMLElement) => boolean | void,\n    scopeSelector?: string | HTMLElement,\n): string {\n    let functionKey = eventName + filterSelector + callback.toString();\n\n    let scope;\n\n    if (typeof scopeSelector === \"string\") {\n        scope = document.querySelector(scopeSelector);\n\n        if (!scope) {\n            throw new Error(`Unable to find element in the document for scopeSelector: ${scopeSelector}`);\n        } else {\n            functionKey += scopeSelector;\n        }\n    } else if (scopeSelector instanceof HTMLElement) {\n        scope = scopeSelector;\n    } else {\n        scope = document;\n    }\n\n    const eventHash = hashString(functionKey).toString();\n\n    if (!Object.keys(delegatedEventListeners).includes(eventHash)) {\n        const wrappedCallback = event => {\n            // Get the nearest DOMNode that matches the given selector.\n            const match = filterSelector ? event.target.closest(filterSelector) : event.target;\n\n            if (match) {\n                // Call the callback with the matching element as the context.\n                return callback.call(match, event, match);\n            }\n        };\n\n        scope.addEventListener(eventName, wrappedCallback);\n        delegatedEventListeners[eventHash] = {\n            scope,\n            eventName,\n            wrappedCallback,\n        };\n    }\n\n    return eventHash;\n}\n\n/**\n * Remove a delegated event listener.\n *\n * @param eventHash - The event hash passed from delegateEvent().\n */\nexport function removeDelegatedEvent(eventHash: string) {\n    const { scope, eventName, wrappedCallback } = delegatedEventListeners[eventHash];\n    scope.removeEventListener(eventName, wrappedCallback);\n    delete delegatedEventListeners[eventHash];\n}\n\n/**\n * Remove all delegated event listeners that have been registered.\n */\nexport function removeAllDelegatedEvents() {\n    Object.keys(delegatedEventListeners).forEach(key => {\n        removeDelegatedEvent(key);\n    });\n}\n\n/**\n * Handler for files being dragged and dropped.\n *\n * @param event - https://developer.mozilla.org/en-US/docs/Web/API/DragEvent\n */\nexport function getDraggedFile(event: DragEvent): FileList | undefined {\n    if (event.dataTransfer && event.dataTransfer.files && event.dataTransfer.files.length) {\n        event.preventDefault();\n\n        return event.dataTransfer.files;\n    }\n}\n\n/**\n * Handler for files being pasted.\n *\n * @param event - https://developer.mozilla.org/en-US/docs/Web/API/DragEvent\n */\nexport function getPastedFile(event: ClipboardEvent): File | undefined | null {\n    if (event.clipboardData && event.clipboardData.items && event.clipboardData.items.length) {\n        const files = Array.from(event.clipboardData.items)\n            .map((item: any) => (item.getAsFile ? item.getAsFile() : null))\n            .filter(Boolean);\n\n        if (files.length > 0) {\n            event.preventDefault();\n            // Currently only 1 file is supported.\n            const mainFile = files[0];\n            return mainFile;\n        }\n    }\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\n/**\n * Register a callback for focusin and focusin out events. The main improvement here over registering\n * the listeners yourself is that the events fire for the whole tree as 1 item instead of as\n * individual notes.\n *\n * This is particularly useful when you want to track focus leaving or enterring a component\n * without caring about the individual contents inside.\n */\nexport class FocusWatcher {\n    /**\n     * @param rootNode - The root dom node to watch on.\n     * @param callback - A callback for when the tree focuses and blurs.\n     */\n    public constructor(private rootNode: Element, private changeHandler: (hasFocus: boolean) => void) {}\n\n    /**\n     * Register the event listeners from this class.\n     */\n    public start = () => {\n        this.rootNode.addEventListener(\"focusout\", this.handleFocusOut, true);\n        this.rootNode.addEventListener(\"focusin\", this.handleFocusIn, true);\n        document.addEventListener(\"click\", this.handleClick);\n    };\n\n    /**\n     * Remove the event listeners from this class.\n     */\n    public stop = () => {\n        this.rootNode.removeEventListener(\"focusout\", this.handleFocusOut, true);\n        this.rootNode.removeEventListener(\"focusin\", this.handleFocusIn, true);\n        document.removeEventListener(\"click\", this.handleClick);\n    };\n\n    /**\n     * Handle when an element loses focus.\n     */\n    private handleFocusOut = (event: FocusEvent) => {\n        this.checkDomTreeHasFocus(event, this.changeHandler);\n    };\n\n    /**\n     * Handle an element gaining focus.\n     */\n    private handleFocusIn = (event: FocusEvent) => {\n        this.checkDomTreeHasFocus(event, this.changeHandler);\n    };\n\n    /**\n     * Handle an element being clicked.\n     */\n    private handleClick = (event: MouseEvent) => {\n        const triggeringElement = event.target as Element;\n        const wasClicked = this.checkDomTreeWasClicked(triggeringElement);\n        if (!wasClicked) {\n            this.changeHandler(false);\n        }\n    };\n\n    /**\n     * Determine whether or not our DOM tree was clicked.\n     */\n    private checkDomTreeWasClicked(clickedElement: Element) {\n        return (\n            this.rootNode &&\n            clickedElement &&\n            (this.rootNode.contains(clickedElement as Element) || this.rootNode === clickedElement)\n        );\n    }\n\n    /**\n     * Determine if the currently focused element is somewhere inside of (or the same as)\n     * a given Element.\n     *\n     * @param rootNode - The root node to look in.\n     */\n    private checkDomTreeHasFocus(event: FocusEvent, callback: (hasFocus: boolean) => void) {\n        setTimeout(() => {\n            const possibleTargets = [\n                // NEEDS TO COME FIRST, because safari will populate relatedTarget on focusin, and its not what we're looking for.\n                document.activeElement, // IE11, Safari.\n                event.relatedTarget as Element, // Chrome (The actual standard)\n                (event as any).explicitOriginalTarget, // Firefox\n            ];\n\n            let activeElement = null;\n            for (const target of possibleTargets) {\n                if (target && target !== document.body) {\n                    activeElement = target;\n                    break;\n                }\n            }\n\n            if (activeElement !== null) {\n                const hasFocus =\n                    this.rootNode &&\n                    activeElement &&\n                    (activeElement === this.rootNode || this.rootNode.contains(activeElement));\n\n                // We will only invalidate based on something actually getting focus.\n                callback(!!hasFocus);\n            }\n        }, 0);\n    }\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\n/**\n * Use the browser's built-in functionality to quickly and safely escape a string.\n *\n * @param str - The string to escape.\n *\n * @returns Escaped HTML.\n */\nexport function escapeHTML(str: string): string {\n    const div = document.createElement(\"div\");\n    div.appendChild(document.createTextNode(str));\n    return div.innerHTML;\n}\n\n/**\n * Use the browser's built-in functionality to quickly unescape a string.\n * UNSAFE with unsafe strings; only use on previously-escaped ones!\n *\n * @param escapedString - A previously escaped string.\n *\n * @returns The unescaped string.\n */\nexport function unescapeHTML(escapedString: string): string {\n    const div = document.createElement(\"div\");\n    div.innerHTML = escapedString;\n    const child = div.childNodes[0];\n    return child && child.nodeValue ? child.nodeValue : \"\";\n}\n\n/**\n * Determine if the browser is escaping the inner contents of our <noscript /> browser.\n */\nexport function browserEscapesNoScript(): boolean {\n    const ns = document.createElement(\"noscript\");\n    ns.innerHTML = \"<test></test>\";\n    document.body.append(ns);\n    const result = ns.innerHTML.startsWith(\"&lt;\");\n    ns.remove();\n    return result;\n}\n\n/**\n * Get an HTML element from a CSS selector or DOM Node.\n *\n * @param selectorOrElement - A CSS selector or an HTML element.\n *\n * @throws If no element was found.\n * @returns An HTMLElement no matter what.\n */\nexport function ensureHtmlElement(selectorOrElement: string | Node | null): HTMLElement {\n    if (typeof selectorOrElement === \"string\") {\n        selectorOrElement = document.querySelector(selectorOrElement);\n    }\n\n    if (!(selectorOrElement instanceof HTMLElement)) {\n        throw new Error(`HTMLElement could not be found for ${selectorOrElement}.`);\n    }\n\n    return selectorOrElement;\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\n// A weakmap so we can store multiple load callbacks per script.\nconst loadEventCallbacks: WeakMap<Node, Array<(event) => void>> = new WeakMap();\nconst rejectionCache: Map<string, Error> = new Map();\n\n/**\n * Dynamically load a javascript file.\n */\nexport function ensureScript(scriptUrl: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n        const existingScript: HTMLScriptElement | null = document.querySelector(`script[src='${scriptUrl}']`);\n        if (rejectionCache.has(scriptUrl)) {\n            reject(rejectionCache.get(scriptUrl));\n        }\n        if (existingScript && loadEventCallbacks.has(existingScript)) {\n            // Add another resolveCallback into the weakmap.\n            const callbacks = loadEventCallbacks.get(existingScript);\n            callbacks && callbacks.push(resolve);\n        } else {\n            // The script doesn't exist. Lets create it.\n            const head = document.getElementsByTagName(\"head\")[0];\n            const script = document.createElement(\"script\");\n            script.type = \"text/javascript\";\n            script.src = scriptUrl;\n            script.onerror = (event: ErrorEvent) => {\n                const error = new Error(\"Failed to load a required embed script\");\n                rejectionCache.set(scriptUrl, error);\n                reject(error);\n            };\n\n            const timeout = setTimeout(() => {\n                const error = new Error(`Loading of the script ${scriptUrl} has timed out.`);\n                rejectionCache.set(scriptUrl, error);\n                reject(error);\n            }, 10000);\n\n            loadEventCallbacks.set(script, [resolve]);\n\n            script.onload = event => {\n                clearTimeout(timeout);\n                const callbacks = loadEventCallbacks.get(script);\n                callbacks && callbacks.forEach(callback => callback(event));\n                loadEventCallbacks.delete(script);\n            };\n\n            head.appendChild(script);\n        }\n    });\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { browserEscapesNoScript, unescapeHTML } from \"./sanitization\";\n\n/**\n * Prepare an element and it's contents for use in a shadow root.\n *\n * @param element\n * @param cloneElement - If true, clone the element into a `newElementTag`. Preserves CSS classes and IDs.\n *      Particularly useful for when the initial content is inside of a <noscript /> tag.\n * @param newElementTag\n */\nexport function prepareShadowRoot(element: HTMLElement, cloneElement: boolean = false, newElementTag = \"div\") {\n    let html = element.innerHTML;\n    // This is likely a noscript tag.\n    if (browserEscapesNoScript()) {\n        html = unescapeHTML(html);\n    }\n    // Safari escapes the contents of the noscript.\n    if (cloneElement) {\n        const newElement = document.createElement(newElementTag);\n\n        // Clone various attributes.\n        newElement.classList.value = element.classList.value;\n        newElement.id = element.id;\n\n        // Insert the element & remove the old old.\n        element.parentNode!.insertBefore(newElement, element);\n        element.remove();\n        element = newElement;\n    } else {\n        // If we aren't making a new real root, we need to empty it out.\n        // Otherwise we'll have duplicate contents.\n        element.innerHTML = \"\";\n    }\n\n    const shadowHeader = element.attachShadow({ mode: \"open\" });\n    shadowHeader.innerHTML = html;\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport tabbable from \"tabbable\";\nimport { logError } from \"@vanilla/utils\";\n\n/**\n * A class for handling tabbing inside of a container with various exclusions.\n *\n * The goal is here is to be able to programatically implement various tabbing behaviours\n * required for accessibility.\n */\nexport class TabHandler {\n    private tabbableElements: HTMLElement[];\n\n    /**\n     * Determine if an element is tabbable.\n     */\n    public static isTabbable(element: Node) {\n        const children = tabbable(element.parentNode);\n        return children.includes(element);\n    }\n\n    /**\n     * Construct the handler. Don't be afraid to construct multiple of these.\n     *\n     * The elements in a particular TabHandler are very moment specific.\n     * If the DOM changes underneath it it will likely no longer be valid.\n     *\n     * @param root - The root element to look in.\n     * @param excludedElements - Elements to ignore.\n     * @param excludedRoots - These element's children will be ignored.\n     */\n    public constructor(\n        root: Element = document.documentElement!,\n        private excludedElements: Element[] = [],\n        private excludedRoots: Element[] = [],\n    ) {\n        this.tabbableElements = tabbable(root);\n    }\n\n    /**\n     * Get the next tabbable item within a given tabindex.\n     *\n     * WARNING: Performance can be poor if you pass many excluded roots and do not\n     * sufficiently narrow the tree your are looking in.\n     *\n     * @param from - The currently focused element.\n     * @param reverse - True to get the previous element instead.\n     * @param allowLooping - Whether or not the focus should loop around from beginning <-> end.\n     */\n    public getNext(\n        from: Element | null = document.activeElement,\n        reverse: boolean = false,\n        allowLooping: boolean = true,\n    ): HTMLElement | null {\n        if (!(from instanceof HTMLElement)) {\n            logError(\"Unable to tab to next element, `fromElement` given is not valid: \", from);\n            return null;\n        }\n        const tabbables = this.tabbableElements.filter(this.createExcludeFilterWithExemption(from));\n        const currentTabIndex = tabbables.indexOf(from);\n\n        if (currentTabIndex < 0) {\n            return null;\n        }\n\n        let targetIndex = reverse ? currentTabIndex - 1 : currentTabIndex + 1;\n\n        if (allowLooping) {\n            // Loop over the beginning and ends\n            if (targetIndex < 0) {\n                targetIndex = tabbables.length - 1;\n            } else if (targetIndex >= tabbables.length) {\n                targetIndex = 0;\n            }\n        }\n\n        return tabbables[targetIndex] || null;\n    }\n\n    /**\n     * Get all.\n     */\n    public getAll(from: Element | null = document.activeElement) {\n        if (!(from instanceof HTMLElement)) {\n            logError(\"Unable to tab to next element, `fromElement` given is not valid: \", from);\n            return null;\n        }\n        return this.tabbableElements.filter(this.createExcludeFilterWithExemption(from));\n    }\n\n    /**\n     * Get the first focusable element.\n     */\n    public getInitial(): HTMLElement | null {\n        const tabbables = this.tabbableElements.filter(this.filterAllExcluded);\n        if (tabbables.length > 0) {\n            return tabbables[0];\n        } else {\n            return null;\n        }\n    }\n    /**\n     * Get the last focusable element.\n     */\n    public getLast(): HTMLElement | null {\n        const tabbables = this.tabbableElements.filter(this.filterAllExcluded);\n        if (tabbables.length > 0) {\n            return tabbables[tabbables.length - 1];\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Filter out all excluded elements. Allows 1 element and its parents to be exempted.\n     *\n     * The exemption is necessary so we can find our place\n     * if the focus is already in an item that we are trying to exclude.\n     *\n     * @returns A filter for use with [].filter()\n     */\n    private createExcludeFilterWithExemption = (exemption: Element) => {\n        return (elementToFilter: Element): boolean => {\n            const elementIsActiveOrChildOfActive = exemption === elementToFilter || elementToFilter.contains(exemption);\n\n            if (!elementIsActiveOrChildOfActive) {\n                if (this.excludedElements.includes(elementToFilter)) {\n                    return false;\n                }\n                for (const excludedRoot of this.excludedRoots) {\n                    if (excludedRoot !== elementToFilter && excludedRoot.contains(elementToFilter)) {\n                        return false;\n                    }\n                }\n            }\n\n            return true;\n        };\n    };\n\n    /**\n     * A filter for use with [].filter().\n     *\n     * Filters out all excluded elements and roots.\n     */\n    private filterAllExcluded = (elementToFilter: Element): boolean => {\n        if (this.excludedElements.includes(elementToFilter)) {\n            return false;\n        }\n        for (const excludedRoot of this.excludedRoots) {\n            if (excludedRoot !== elementToFilter && excludedRoot.contains(elementToFilter)) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\n// Some polyfills\nimport \"focus-visible\";\nimport smoothscroll from \"smoothscroll-polyfill\";\n\nsmoothscroll.polyfill();\n\nexport * from \"./domData\";\nexport * from \"./emoji\";\nexport * from \"./EscapeListener\";\nexport * from \"./events\";\nexport * from \"./FocusWatcher\";\nexport * from \"./sanitization\";\nexport * from \"./scripts\";\nexport * from \"./shadowDom\";\nexport * from \"./TabHandler\";\nexport * from \"./visibility\";\n","/**\n * @author Adam Charron <adam.c@vanillaforums.com>\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport React from \"react\";\n\ninterface IProps {\n    duration: number;\n    onHover: React.MouseEventHandler | undefined;\n    once?: boolean;\n    children: (providedProps: IProvidedProps) => React.ReactNode;\n}\n\ninterface IProvidedProps {\n    onMouseEnter: React.MouseEventHandler;\n    onMouseLeave: React.MouseEventHandler;\n}\n\n/**\n * Component with render props for handling a hover after a certain duration.\n *\n * Simply spread the provided props over the element you want to track the hover of.\n *\n * @example\n * <Hoverable duration={250} onHover={myCallback}>\n *     {providedProps => {\n *          <div {...providedProps} className=\"someClass\">\n *              // Some deeply neested child.\n *          </div>\n *     }}\n * </Hoverable>\n */\nexport class Hoverable extends React.Component<IProps> {\n    public static defaultProps = {\n        once: true,\n    };\n\n    /**\n     * @inheritdoc\n     */\n    public render(): React.ReactNode {\n        return this.props.children({\n            onMouseEnter: this.mouseEnterHandler,\n            onMouseLeave: this.mouseLeaveHandler,\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public componentWillUnmount() {\n        this.dismissTimeout();\n    }\n\n    private hoverTimeout: NodeJS.Timeout;\n    private hasExecuted = false;\n\n    /**\n     * Handle the hover event by checking if we've already called ourselves then calling the passed callback.\n     */\n    private handleHover = (event: React.MouseEvent) => {\n        if (this.hasExecuted && this.props.once) {\n            return;\n        }\n\n        this.hasExecuted = true;\n        if (this.props.onHover) {\n            this.props.onHover(event);\n        }\n    };\n\n    /**\n     * Set a timeout when the mouse enters. If the timeout is not removed we have a hover.\n     */\n    private mouseEnterHandler = (event: React.MouseEvent) => {\n        this.hoverTimeout = setTimeout(() => {\n            this.handleHover(event);\n        }, this.props.duration);\n    };\n\n    /**\n     * Remove the timeout for the hover so it doesn't execute again (or at all).\n     */\n    private mouseLeaveHandler = (event: React.MouseEvent) => {\n        this.dismissTimeout();\n    };\n\n    /**\n     * Cleanup timeouts and properties to reset.\n     */\n    private dismissTimeout() {\n        this.hasExecuted = false;\n        if (this.hoverTimeout) {\n            clearTimeout(this.hoverTimeout);\n        }\n    }\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport ReactDOM from \"react-dom\";\nimport { forceRenderStyles } from \"typestyle\";\n\n/**\n * Mount a root component of a React tree.\n *\n * - ReactDOM render.\n * - Typestyle render.\n *\n * If the overwrite option is passed this component will replace the components you passed as target.\n *\n * Default Mode:\n * <div><TARGET /></div> -> <div><TARGET><REACT></TARGET><div>\n *\n * Overwrite Mode:\n * <div><TARGET /></div> -> <div><REACT/></div>\n */\nexport function mountReact(\n    component: React.ReactElement,\n    target: HTMLElement,\n    callback?: () => void,\n    options?: { overwrite: boolean },\n) {\n    let mountPoint = target;\n    let cleanupContainer: HTMLElement | undefined;\n    if (options && options.overwrite) {\n        const container = document.createElement(\"span\");\n        cleanupContainer = container;\n        target.parentElement!.insertBefore(container, target);\n        mountPoint = container;\n    }\n    ReactDOM.render(component, mountPoint, () => {\n        if (cleanupContainer) {\n            target.remove();\n            if (cleanupContainer.firstElementChild) {\n                cleanupContainer.parentElement!.insertBefore(cleanupContainer.firstElementChild, cleanupContainer);\n                cleanupContainer.remove();\n                target.remove();\n            }\n        }\n        forceRenderStyles();\n        callback && callback();\n    });\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { useEffect } from \"react\";\n\nimport { EscapeListener } from \"@vanilla/dom-utils\";\n\n/**\n * React hook for listening for an escape press on the keyboard inside root element.\n *\n * When escape is pressed, the return element will be focused if provided or the callback will will be called.\n */\nexport function useEscapeListener({\n    root,\n    returnElement,\n    callback,\n}: {\n    root?: HTMLElement | null;\n    returnElement?: HTMLElement | null;\n    callback?: (event: KeyboardEvent) => void;\n}) {\n    useEffect(() => {\n        if (root === null || returnElement === null) {\n            // Bail out if these are null. That means we have unfilled refs. Undefined means they were not passed and we should use the defaults.\n            return;\n        }\n        const actualRoot = root || document.documentElement;\n        const escapeListener = new EscapeListener(actualRoot, returnElement, callback);\n        escapeListener.start();\n        return escapeListener.stop;\n    }, [root, returnElement, callback]);\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { useEffect, useLayoutEffect } from \"react\";\nimport { FocusWatcher } from \"@vanilla/dom-utils\";\n\n/**\n * React hook for creating and destroying a FocusWatcher. See FocusWatcher documentation.\n */\nexport function useFocusWatcher(\n    ref: React.RefObject<Element | null>,\n    changeHandler: (hasFocus: boolean) => void,\n    bypass?: boolean,\n) {\n    useLayoutEffect(() => {\n        if (bypass) {\n            return;\n        }\n        if (ref.current !== null) {\n            const focusWatcher = new FocusWatcher(ref.current, changeHandler);\n            focusWatcher.start();\n            return focusWatcher.stop;\n        }\n    }, [ref, changeHandler, bypass]);\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { RefObject, useState, useLayoutEffect } from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\n/**\n * Utility hook for measuring a dom element.\n * Will return back measurements as a bounding rectangle for the element contained in a ref.\n */\nexport function useMeasure(ref: RefObject<HTMLElement | null>) {\n    const [bounds, setContentRect] = useState<DOMRectReadOnly>(\n        // DOMRectReadOnly.fromRect()\n        { x: 0, y: 0, width: 0, height: 0, top: 0, right: 0, bottom: 0, left: 0, toJSON: () => \"\" },\n    );\n\n    useLayoutEffect(() => {\n        let animationFrameId: number | null = null;\n        const measure: ResizeObserverCallback = ([entry]) => {\n            animationFrameId = window.requestAnimationFrame(() => {\n                setContentRect(ref.current!.getBoundingClientRect() as any);\n            });\n        };\n\n        const ro = new ResizeObserver(measure);\n        if (ref.current) {\n            ro.observe(ref.current);\n        }\n\n        return () => {\n            window.cancelAnimationFrame(animationFrameId!);\n            ro.disconnect();\n        };\n    }, [ref]);\n\n    return bounds;\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\nimport { useRef, useEffect } from \"react\";\n\n/**\n * Keep a reference to the previous value of something. (during the previous render).\n *\n * @param value\n */\nexport function useLastValue<T>(value: T): T | undefined {\n    const ref = useRef<T>();\n    useEffect(() => void (ref.current = value), [value]);\n    return ref.current;\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { useState } from \"react\";\n\n/**\n * Return a throw function for use inside of custom hooks & useEffect.\n *\n * This needed because throwing inside of `useEffect` does not propagate up to error boundaries.\n * @see https://github.com/facebook/react/issues/11334\n */\nexport function useThrowError(): (err: Error) => void {\n    const [error, setError] = useState<Error | null>(null);\n    if (error) {\n        throw error;\n    }\n\n    return setError;\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nexport * from \"./Hoverable\";\nexport * from \"./mounting\";\nexport * from \"./useEscapeListener\";\nexport * from \"./useFocusWatcher\";\nexport * from \"./useMeasure\";\nexport * from \"./useLastValue\";\nexport * from \"./useTabKeyboardHandler\";\nexport * from \"./useThrowError\";\n","/**\n * Utility function related to logging/debugging.\n *\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nlet internalDebugValue = false;\n\n/**\n * Get or set the debug flag.\n *\n * @param newValue - The new value of debug.\n * @returns the current debug setting.\n */\nexport function debug(newValue?: boolean): boolean {\n    if (newValue !== undefined) {\n        internalDebugValue = newValue;\n    }\n\n    return internalDebugValue;\n}\n\n/**\n * Log something to console.\n * This only prints in debug mode.\n *\n * @param value - The value to log.\n */\nexport function logDebug(...value: any[]) {\n    if (internalDebugValue) {\n        // eslint-disable-next-line no-console\n        console.log(...value);\n    }\n}\n\n/**\n * Log an error to console.\n * This will not run in test mode _unless_ debug is set to true.\n *\n * @param value - The value to log.\n */\nexport function logError(...value: any[]) {\n    if (!internalDebugValue && process.env.NODE_ENV === \"test\") {\n        return;\n    }\n    // eslint-disable-next-line no-console\n    console.error(...value);\n}\n\n/**\n * Log a warning to console.\n * This will not run in test mode _unless_ debug is set to true.\n *\n * @param value - The value to log.\n */\nexport function logWarning(...value: any[]) {\n    if (!internalDebugValue && process.env.NODE_ENV === \"test\") {\n        return;\n    }\n    // eslint-disable-next-line no-console\n    console.warn(...value);\n}\n","/**\n * At-who setup for legacy @mentions.\n *\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { formatUrl, getMeta } from \"@library/utility/appUtils\";\nimport { logDebug, matchAtMention as _matchAtMention } from \"@vanilla/utils\";\n\n// Store cache results in an outer scoped variable., so all instances share the same data\n// and can build the cache together.\nconst atCache = {};\nconst atEmpty = {};\n\n// The current raw match. This is needed to properly match quoted strings.\nlet rawMatch: string | undefined;\n\n// Set minimum characters to type for @mentions to fire\nconst minCharacters = getMeta(\"mentionMinChars\", 2);\n\n// Max suggestions to show in flyouts.\nconst maxSuggestions = getMeta(\"mentionSuggestionCount\", 5);\n\n// Server response limit. This should match the limit set in\n// *UserController->TagSearch* and UserModel->TagSearch\nconst serverLimit = 30;\n\n// Emoji, set in definition list in foot, by Emoji class. Make sure\n// that class is getting instantiated, otherwise emoji will be empty.\n\ninterface IEmojiData {\n    assetPath?: string;\n    emoji?: {\n        [key: string]: string;\n    };\n    format?: string;\n}\n\nconst emojiData: IEmojiData = getMeta(\"emoji\", {});\nconst emojis = emojiData.emoji || {};\nconst emojiFormat = emojiData.format || \"\";\nconst emojiAssetPath = emojiData.assetPath || \"\";\n\nconst emojiList = Object.entries(emojis).map(([index, emojiImageUrl]) => {\n    const parts = emojiImageUrl.split(\".\");\n\n    return { name: index, filename: emojiImageUrl, basename: parts[0], ext: \".\" + parts[1] };\n});\n\nconst emojiContentTemplate = emojiFormat\n    .replace(/{(.+?)}/g, \"$${$1}\")\n    .replace(\"%1$s\", \"${src}\")\n    .replace(\"%2$s\", \"${name}\")\n    .replace(\"${src}\", emojiAssetPath + \"/${filename}\")\n    .replace(\"${dir}\", emojiAssetPath);\nconst emojiTemplate =\n    '<li data-value=\":${name}:\" class=\"at-suggest-emoji\"><span class=\"emoji-wrap\">' +\n    emojiContentTemplate +\n    '</span> <span class=\"emoji-name\">${name}</span></li>';\n\n/**\n * Match an @mention\n *\n * @param flag - The character sequence used to trigger this match (e.g. :).\n * @param subtext - The string to be tested.\n * @param shouldStartWithSpace - Should the pattern include a test for a whitespace prefix?\n * @returns Matching string if successful. Null on failure to match.\n */\nexport function matchAtMention(flag: string, subtext: string, shouldStartWithSpace: boolean): string | null {\n    const match = _matchAtMention(subtext, shouldStartWithSpace);\n    if (match) {\n        rawMatch = match.rawMatch;\n        return match.match;\n    }\n\n    return null;\n}\n\n/**\n * Custom matching for our emoji images. Eg. :) :/ >:(\n *\n * @param flag - The character sequence used to trigger this match (e.g. :).\n * @param subtext - The string to be tested.\n * @param shouldStartWithSpace - Should the pattern include a test for a whitespace prefix?\n * @returns Matching string if successful.  Null on failure to match.\n */\nexport function matchFakeEmoji(flag, subtext, shouldStartWithSpace) {\n    flag = flag.replace(/[-[]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n    if (shouldStartWithSpace) {\n        flag = \"(?:^|\\\\s)\" + flag;\n    }\n\n    // Some browsers append a linefeed to the end of subtext.  We need to allow for it.\n    const regexp = new RegExp(flag + \"([A-Za-z0-9_+-]*|[^\\\\x00-\\\\xff]*)(?:\\\\n)?$\", \"gi\");\n    const match = regexp.exec(subtext);\n\n    if (match) {\n        return match[2] || match[1];\n    } else {\n        return null;\n    }\n}\n\nexport function initializeAtComplete(editorElement, iframe?: any) {\n    // Handle iframe situation\n    const iframeWindow = iframe ? iframe.contentWindow : \"\";\n\n    const remoteDataHandler = (query, callback) => {\n        // Do this because of undefined when adding spaces to\n        // matcher callback, as it will be monitoring changes.\n        query = query || \"\";\n\n        // Only all query strings greater than min_characters\n        if (query.length >= minCharacters) {\n            // If the cache array contains less than LIMIT 30\n            // (according to server logic), then there's no\n            // point sending another request to server, as there\n            // won't be any more results, as this is the maximum.\n            let shouldContinueFiltering = true;\n\n            // Remove last character so that the string can be\n            // found in the cache, if exists, then check if its\n            // matching array has less than the server limit of\n            // matches, which means there are no more, so save the\n            // additional server request from being sent.\n            let filterString = \"\";\n\n            // Loop through string and find first closest match in\n            // the cache, and if a match, check if more filtering\n            // is required.\n            for (let i = 0, l = query.length; i < l; i++) {\n                filterString = query.slice(0, -i);\n\n                if (atCache[filterString] && atCache[filterString].length < serverLimit) {\n                    // Add this other query to empty array, so that it\n                    // will not fire off another request.\n                    atEmpty[query] = query;\n\n                    // Do not filter more, meaning, do not send\n                    // another server request, as all the necessary\n                    // data is already in memory.\n                    shouldContinueFiltering = false;\n                    break;\n                }\n            }\n\n            // Check if query would be empty, based on previously\n            // cached empty results. Compare against the start of\n            // the latest query string.\n            let isQueryEmpty = false;\n\n            // Loop through cache of empty query strings.\n            for (const key in atEmpty) {\n                if (atEmpty.hasOwnProperty(key)) {\n                    // See if cached empty results match the start\n                    // of the latest query. If so, then no point\n                    // sending new request, as it will return empty.\n                    if (query.match(new RegExp(\"^\" + key + \"+\")) !== null) {\n                        isQueryEmpty = true;\n                        break;\n                    }\n                }\n            }\n\n            const filterSuccessHandler = data => {\n                if (Array.isArray(data)) {\n                    data.forEach(result => {\n                        if (typeof result === \"object\" && typeof result.name === \"string\") {\n                            // Convert special characters to safely insert into template.\n                            result.name = result.name\n                                .replace(/&/g, \"&amp;\")\n                                .replace(/</g, \"&lt;\")\n                                .replace(/>/g, \"&gt;\")\n                                .replace(/\"/g, \"&quot;\")\n                                .replace(/'/g, \"&apos;\");\n                        }\n                    });\n                }\n\n                callback(data);\n\n                // If data is empty, cache the results to prevent\n                // other requests against similarly-started\n                // query strings.\n                if (data.length) {\n                    atCache[query] = data;\n                } else {\n                    atEmpty[query] = query;\n                }\n            };\n\n            // Produce the suggestions based on data either\n            // cached or retrieved.\n            if (shouldContinueFiltering && !isQueryEmpty && !atCache[query]) {\n                $.getJSON(\n                    formatUrl(\"/user/tagsearch\"),\n                    {\n                        q: query,\n                        limit: serverLimit,\n                    },\n                    filterSuccessHandler,\n                );\n            } else {\n                // If no point filtering more as the parent filter\n                // has not been maxed out with responses, use the\n                // closest parent filter instead of the latest\n                // query string.\n                if (!shouldContinueFiltering) {\n                    callback(atCache[filterString]);\n                } else {\n                    callback(atCache[query]);\n                }\n            }\n        }\n    };\n\n    /**\n     * Pre-insert handler for atwho.\n     *\n     * Note, in contenteditable mode (iframe for us), the value is surrounded by span tags.\n     */\n    function beforeInsertHandler(value: string, $li: JQuery<any>): string {\n        // It's better to use the value provided, as it may have\n        // html tags around it, depending on mode. Using the\n        // regular expression avoids the need to check what mode\n        // the suggestion is made in, and then constructing\n        // it based on that. Optional assignment for undefined\n        // matcher callback results.\n        let username = $li.data(\"value\") || \"\";\n        // Pop off the flag--usually @ or :\n        username = username.slice(1, username.length);\n\n        // Check if there are any whitespaces, and if so, add\n        // quotation marks around the whole name.\n        const requiresQuotation = /[^\\w-]/.test(username);\n\n        // Check if there are already quotation marks around\n        // the string--double or single.\n        const hasQuotation = /([\"'])(.+)([\"'])/g.test(username);\n\n        let insert = username;\n        if (requiresQuotation && !hasQuotation) {\n            // Do not even need to have value wrapped in\n            // any tags at all. It will be done automatically.\n            // insert = value.replace(/(.*\\>?)@([\\w\\d\\s\\-\\+\\_]+)(\\<?.*)/, '$1@\"$2\"$3');\n            insert = '\"' + username + '\"';\n        }\n\n        // This is needed for checking quotation mark directly\n        // after at character, and preventing another at character\n        // from being inserted into the page.\n        const rawAtMatch = rawMatch || \"\";\n\n        const atQuote = /.?@([\"'])/.test(rawAtMatch);\n\n        // If atQuote is false, then insert the at character,\n        // otherwise it means the user typed a quotation mark\n        // directly after the at character, which, would get\n        // inserted again if not checked. atQuote would\n        // be false most of the time; the exception is when\n        // it's true.\n        if (!atQuote) {\n            // Supressing this error because this is legacy that is complicated to refactor.\n            // In the case here `this` is the atwho library which we don't have types.\n            // @ts-ignore\n            insert = this.at + insert;\n        }\n\n        // The last character prevents the matcher from trigger on nearly everything.\n        return insert;\n    }\n\n    /**\n     * Custom highlighting to accept spaces in names.\n     * This is almost a copy of the default in the library, with tweaks in the regex.\n     */\n    function highlightHandler(li: string, query: string): string {\n        if (!query) {\n            return li;\n        }\n        const regexp = new RegExp(\">\\\\s*(\\\\w*)(\" + query.replace(\"+\", \"\\\\+\") + \")(\\\\w*)\\\\s*(\\\\s+.+)?<\", \"ig\");\n        // Capture group 4 for possible spaces\n        return li.replace(regexp, (str, $1, $2, $3, $4) => {\n            // Weird Chrome behaviour, so check for undefined, then\n            // set to empty string if so.\n            if (typeof $3 === \"undefined\") {\n                $3 = \"\";\n            }\n            if (typeof $4 === \"undefined\") {\n                $4 = \"\";\n            }\n\n            return \"> \" + $1 + \"<strong>\" + $2 + \"</strong>\" + $3 + $4 + \" <\";\n        });\n    }\n\n    $(editorElement)\n        .atwho({\n            at: \"@\",\n            tpl: '<li data-value=\"@${name}\" data-id=\"${id}\">${name}</li>',\n            limit: maxSuggestions,\n            callbacks: {\n                remote_filter: remoteDataHandler,\n                before_insert: beforeInsertHandler,\n                highlighter: highlightHandler,\n                matcher: matchAtMention,\n            },\n            cWindow: iframeWindow,\n        })\n        .atwho({\n            at: \":\",\n            tpl: emojiTemplate,\n            insert_tpl: \"${atwho-data-value}\",\n            callbacks: {\n                matcher: matchFakeEmoji,\n                tplEval: (tpl, map) => logDebug(map),\n            },\n            limit: maxSuggestions,\n            data: emojiList,\n            cWindow: iframeWindow,\n        });\n\n    /**\n     * This hook is triggered when atWho places a selection list in the window.\n     * The context is passed implicitly when triggered by at.js.\n     *\n     * @param event - A custom event triggered by the advanced editor iframe/wysiwyg.\n     * @param offset - The pixel offsets inside of the iframe.\n     * @param context - Context from the contenteditable inside of the iframe.\n     */\n    function iframeAtWhoRepositionHandler(event: any, offset: any, context: any) {\n        // Actual suggestion box that will appear.\n        const suggestionElement = context.view.$el;\n\n        // The area where text will be typed (contenteditable body).\n        const $inputor = context.$inputor;\n\n        // Display it below the text.\n        const lineHeight = parseInt($inputor.css(\"line-height\"), 10);\n\n        // offset contains the top left values of the offset to the iframe\n        // we need to convert that to main window coordinates\n        const iframeOffset = $(iframe).offset();\n        let leftCoordinate = (iframeOffset ? iframeOffset.left : 0) + offset.left;\n        let topCoordinate = iframeOffset ? iframeOffset.top : 0;\n        let selectHeight = 0;\n\n        // In wysiwyg mode, the suggestbox follows the typing, which\n        // does not happen in regular mode, so adjust it.\n        // Either @ or : for now.\n        const at = context.at;\n        const { text } = context.query;\n        const fontMirror = $(\".BodyBox,.js-bodybox\");\n        const font = fontMirror.css(\"font-size\") + \" \" + fontMirror.css(\"font-family\");\n\n        // Get font width\n        const fontWidth = (at + text).width(font) - 2;\n\n        if (at === \"@\") {\n            leftCoordinate -= fontWidth;\n        }\n\n        if (at === \":\") {\n            leftCoordinate -= 2;\n        }\n\n        // atWho adds 3 select areas, presumably for differnet positing on screen (above below etc)\n        // This finds the active one and gets the container height\n        $(suggestionElement).each((index, element) => {\n            const outerHeight = $(element).outerHeight();\n            const height = $(element).height();\n\n            if (outerHeight && height && outerHeight > 0) {\n                selectHeight += height + lineHeight;\n            }\n        });\n\n        // Now should we show the selection box above or below?\n        const windowHeight = $(window).height() || 0;\n        const scrollPosition = $(window).scrollTop() || 0;\n        const selectionPosition = topCoordinate + offset.top - ($(window).scrollTop() || 0);\n        const iAvailableSpace = windowHeight - (selectionPosition - scrollPosition);\n\n        if (iAvailableSpace >= selectHeight) {\n            // Enough space below\n            topCoordinate = topCoordinate + offset.top + selectHeight - scrollPosition;\n        } else {\n            // Place it above instead\n            // @todo should check if this is more space than below\n            topCoordinate = topCoordinate + offset.top - scrollPosition;\n        }\n\n        // Move the select box\n        const newOffset = {\n            left: leftCoordinate,\n            top: topCoordinate,\n        };\n        $(suggestionElement).offset(newOffset);\n    }\n\n    // Only necessary for iframe.\n    // Based on work here: https://github.com/ichord/At.js/issues/124\n    if (iframeWindow) {\n        $(iframeWindow).on(\"reposition.atwho\", iframeAtWhoRepositionHandler);\n    }\n}\n","/**\n * Entrypoint for gradually replacing global.js\n *\n * At some point everything in this folder should be able to be removed (new base theme).\n *\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { onContent, onReady } from \"@library/utility/appUtils\";\nimport { initializeAtComplete } from \"@dashboard/legacy/atwho\";\nimport { escapeHTML } from \"@vanilla/dom-utils\";\n\n// Expose some new module functions to our old javascript system.\nwindow.escapeHTML = escapeHTML;\n// Initialize legacy @mentions for all BodyBox elements.\nif ($.fn.atwho) {\n    onReady(() => initializeAtComplete(\".BodyBox,.js-bodybox\"));\n    onContent(() => initializeAtComplete(\".BodyBox,.js-bodybox\"));\n\n    // Also assign this function to the global `gdn` object.\n    // The advanced editor calls this function directly when in wysiwyg format, as it needs to\n    // handle an iframe, and the editor instance needs to be referenced. The advanced editor does not yet use\n    // this build process so it can only communicate through here with a global.\n    window.gdn.atCompleteInit = initializeAtComplete;\n}\n","/**\n * State utility functions.\n *\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport apiv2 from \"@library/apiv2\";\nimport { AxiosResponse, AxiosError } from \"axios\";\nimport { IApiResponse, IApiError } from \"@library/@types/api/core\";\n\n// Utility to pull a group of action types out of an actions object\nexport type ActionsUnion<A extends IActionCreatorsMapObject> = ReturnType<A[keyof A]>;\n\n// Utility to create a generic action action.\n\n/**\n * Utility to create an action with our a without a payload of a given type.\n * The action generated can have its type narrowed in a reducer switch statement if the type T matches.\n *\n * @deprecated\n * @see ActionsUnion\n *\n * @param type The action type.\n * @param payload The payload data.\n */\nexport function createAction<ActionType extends string>(type: ActionType): IAction<ActionType>;\nexport function createAction<ActionType extends string, Payload>(\n    type: ActionType,\n    payload: Payload,\n): IActionWithPayload<ActionType, Payload>;\nexport function createAction<ActionType extends string, Payload>(type: ActionType, payload?: Payload) {\n    return payload === undefined ? { type } : { type, payload };\n}\n\n/**\n * Create request, response, and error action creators.\n *\n * The dummy types are needed because typescript currently requires all generic types to be specified or all to be inferred. They cannot currently be mixed.\n *\n * @deprecated\n *\n * @see https://github.com/Microsoft/TypeScript/issues/10571#issuecomment-345402872\n *\n * @param requestType The string for the request type. This should be a unique constant.\n * @param successType The string for the success type. This should be a unique constant.\n * @param errorType The string for the error type. This should be a unique constant.\n * @param dummyResponseType A placeholder to infer the type of the response. This isn't used for anything other than inferring a type.\n * @param dummyMetaType A placeholder to infer the type of the meta. This isn't used for anything other than inferringa  type.\n *\n * @example\n *\n * ```\n * const GET_THING_REQUEST = \"GET_THING_REQUEST\";\n * const GET_THING_SUCCESS = \"GET_THING_SUCCESS\";\n * const GET_THING_ERROR = \"GET_THING_ERROR\";\n * interface IThing { thing: string }\n * interface IThingOptions { page?: number }\n *\n * generateApiActionCreators(GET_THING_REQUEST, GET_THING_SUCCESS, GET_THING_ERROR, {} as IThing, {} as IThingOptions);\n * ```\n */\nexport function generateApiActionCreators<\n    RequestActionType extends string,\n    SuccessActionType extends string,\n    ErrorActionType extends string,\n    ResponseDataType,\n    Meta = any\n>(\n    requestType: RequestActionType,\n    successType: SuccessActionType,\n    errorType: ErrorActionType,\n    dummyResponseType?: ResponseDataType,\n    dummyMetaType?: Meta,\n): {\n    request: (meta?: Meta) => IApiAction<RequestActionType, Meta>;\n    success: (\n        payload: IApiResponse<ResponseDataType>,\n        meta?: Meta,\n    ) => IApiSuccessAction<SuccessActionType, Meta, ResponseDataType>;\n    error: (error: IApiError, meta?: Meta) => IApiErrorAction<ErrorActionType, Meta>;\n} {\n    return {\n        request: (meta: Meta) => createApiRequestAction(requestType, meta),\n        success: (response: IApiResponse<ResponseDataType>, meta: Meta) =>\n            createApiSuccessAction(successType, meta, response),\n        error: (error: IApiError, meta: Meta) => createApiErrorAction(errorType, meta, error),\n    };\n}\n\ntype GeneratedActionCreators = ReturnType<typeof generateApiActionCreators>;\n\n// Thunk types\ntype RequestType = \"get\" | \"post\" | \"put\" | \"delete\" | \"patch\";\n/**\n * @deprecated\n * @param requestType\n * @param endpoint\n * @param actionCreators\n * @param params\n */\nexport function apiThunk(\n    requestType: RequestType,\n    endpoint: string,\n    actionCreators: GeneratedActionCreators,\n    params: any,\n) {\n    return dispatch => {\n        dispatch(actionCreators.request(params));\n        return apiv2[requestType as any](endpoint, params)\n            .then((response: AxiosResponse) => {\n                dispatch(actionCreators.success(response, params));\n                return response;\n            })\n            .catch((axiosError: AxiosError) => {\n                const error = axiosError.response ? axiosError.response.data : (axiosError as any);\n                dispatch(actionCreators.error(error));\n            });\n    };\n}\n\n// Action interfaces\nexport interface IAction<T extends string> {\n    type: T;\n}\n\nexport interface IActionWithPayload<T extends string, P> extends IAction<T> {\n    payload: P;\n}\n\nexport interface IActionCreator<T extends string> {\n    (): IAction<T>;\n}\n\ntype FunctionType = (...args: any[]) => any;\ninterface IActionCreatorsMapObject {\n    [actionCreator: string]: FunctionType;\n}\n\n// API Action interfaces\ninterface IApiAction<ActionType, Meta> {\n    type: ActionType;\n    meta: Meta;\n}\n\ninterface IApiErrorAction<ActionType, Meta> extends IApiAction<ActionType, Meta> {\n    payload: IApiError;\n}\n\ninterface IApiSuccessAction<ActionType, Meta, ResponseDataType> extends IApiAction<ActionType, Meta> {\n    payload: IApiResponse<ResponseDataType>;\n}\n\n/**\n * Create an API request action. For use in createApiActions().\n *\n * @deprecated\n * @param type The action's type.\n * @param meta The type of the meta for the action.\n */\nfunction createApiRequestAction<ActionType extends string, Meta>(\n    type: ActionType,\n    meta: Meta,\n): IApiAction<ActionType, Meta> {\n    return {\n        type,\n        meta,\n    };\n}\n\n/**\n * Create an API error action. For use in createApiActions().\n *\n * @deprecated\n * @param type The action's type.\n * @param meta The type of the meta for the action.\n * @param error An API error.\n */\nfunction createApiErrorAction<ActionType extends string, Meta>(\n    type: ActionType,\n    meta: Meta,\n    error: IApiError,\n): IApiErrorAction<ActionType, Meta> {\n    return {\n        type,\n        meta,\n        payload: error,\n    };\n}\n\n/**\n * Create an API success action. For use in createApiActions().\n *\n * @deprecated\n * @param type The action's type.\n * @param meta The type of the meta for the action.\n * @param payload The shape of the IApiResponse data.\n */\nfunction createApiSuccessAction<ActionType extends string, Meta, ResponseDataType>(\n    type: ActionType,\n    meta: Meta,\n    payload: IApiResponse<ResponseDataType>,\n): IApiSuccessAction<ActionType, Meta, ResponseDataType> {\n    return {\n        type,\n        meta,\n        payload,\n    };\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { generateApiActionCreators, ActionsUnion, apiThunk } from \"@library/redux/utility\";\nimport { IUserAuthenticator } from \"@dashboard/@types/api/authenticate\";\n\nexport const GET_USER_AUTHENTICATORS_REQUEST = \"GET_USER_AUTHENTICATORS_REQUEST\";\nexport const GET_USER_AUTHENTICATORS_SUCCESS = \"GET_USER_AUTHENTICATORS_SUCCESS\";\nexport const GET_USER_AUTHENTICATORS_ERROR = \"GET_USER_AUTHENTICATORS_ERROR\";\n\nconst getAuthenticatorsActions = generateApiActionCreators(\n    GET_USER_AUTHENTICATORS_REQUEST,\n    GET_USER_AUTHENTICATORS_SUCCESS,\n    GET_USER_AUTHENTICATORS_ERROR,\n    // https://github.com/Microsoft/TypeScript/issues/10571#issuecomment-345402872\n    {} as IUserAuthenticator[],\n);\n\nexport const getUserAuthenticators = () =>\n    apiThunk(\"get\", \"authenticate/authenticators\", getAuthenticatorsActions, undefined);\n\nexport type ActionTypes = ActionsUnion<typeof getAuthenticatorsActions>;\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport * as actions from \"@dashboard/pages/authenticate/authenticatorsActions\";\nimport { IAuthenticatorState } from \"@dashboard/@types/state\";\nimport { LoadStatus } from \"@library/@types/api/core\";\n\nconst initialState: IAuthenticatorState = {\n    status: LoadStatus.PENDING,\n};\n\nexport default function authenticatorsReducer(\n    state: IAuthenticatorState = initialState,\n    action: actions.ActionTypes,\n): IAuthenticatorState {\n    switch (action.type) {\n        case actions.GET_USER_AUTHENTICATORS_REQUEST:\n            return {\n                ...state,\n                status: LoadStatus.LOADING,\n            };\n        case actions.GET_USER_AUTHENTICATORS_SUCCESS:\n            return {\n                status: LoadStatus.SUCCESS,\n                data: action.payload.data,\n                error: undefined,\n            };\n        case actions.GET_USER_AUTHENTICATORS_ERROR:\n            return {\n                ...state,\n                status: LoadStatus.ERROR,\n                error: action.payload,\n            };\n        default:\n            return state;\n    }\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { generateApiActionCreators, ActionsUnion, apiThunk, createAction } from \"@library/redux/utility\";\nimport { IRequestPasswordOptions } from \"@dashboard/@types/api/authenticate\";\n\n// Authenticating user /authenticate/password\nexport const POST_REQUEST_PASSWORD_REQUEST = \"POST_REQUEST_PASSWORD_REQUEST\";\nexport const POST_REQUEST_PASSWORD_ERROR = \"POST_REQUEST_PASSWORD_ERROR\";\nexport const POST_REQUEST_PASSWORD_SUCCESS = \"POST_REQUEST_PASSWORD_SUCCESS\";\nexport const AFTER_REQUEST_PASSWORD_SUCCESS_NAVIGATE = \"AFTER_REQUEST_PASSWORD_SUCCESS_NAVIGATE\";\n\nexport const afterRequestPasswordSuccessNavigate = () => createAction(AFTER_REQUEST_PASSWORD_SUCCESS_NAVIGATE);\n\nconst otherActions = {\n    afterRequestPasswordSuccessNavigate,\n};\n\nconst requestPasswordActions = generateApiActionCreators(\n    POST_REQUEST_PASSWORD_REQUEST,\n    POST_REQUEST_PASSWORD_SUCCESS,\n    POST_REQUEST_PASSWORD_ERROR,\n    // https://github.com/Microsoft/TypeScript/issues/10571#issuecomment-345402872\n    {},\n    {} as IRequestPasswordOptions,\n);\n\nexport type ActionTypes = ActionsUnion<typeof requestPasswordActions> | ActionsUnion<typeof otherActions>;\n\nexport const postRequestPassword = (params: IRequestPasswordOptions) =>\n    apiThunk(\"post\", \"users/request-password\", requestPasswordActions, params);\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport * as actions from \"@dashboard/pages/recoverPassword/recoverPasswordActions\";\nimport { IRequestPasswordState } from \"@dashboard/@types/state\";\nimport { LoadStatus } from \"@library/@types/api/core\";\n\nconst initialState: IRequestPasswordState = {\n    status: LoadStatus.PENDING,\n};\n\nexport default function passwordReducer(\n    state: IRequestPasswordState = initialState,\n    action: actions.ActionTypes,\n): IRequestPasswordState {\n    switch (action.type) {\n        case actions.POST_REQUEST_PASSWORD_REQUEST:\n            return {\n                ...state,\n                status: LoadStatus.LOADING,\n            };\n        case actions.POST_REQUEST_PASSWORD_SUCCESS:\n            return {\n                status: LoadStatus.SUCCESS,\n                data: action.payload.data,\n                error: undefined,\n            };\n        case actions.POST_REQUEST_PASSWORD_ERROR:\n            return {\n                ...state,\n                status: LoadStatus.ERROR,\n                error: action.payload,\n            };\n        case actions.AFTER_REQUEST_PASSWORD_SUCCESS_NAVIGATE:\n            return initialState;\n        default:\n            return state;\n    }\n}\n","/**\n * @author Adam (charrondev) Charron <adam.c@vanillaforums.com>\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { combineReducers } from \"redux\";\nimport authenticatorsReducer from \"@dashboard/pages/authenticate/authenticatorsReducer\";\nimport passwordReducer from \"@dashboard/pages/recoverPassword/recoverPasswordReducer\";\n\nconst authenticateReducer = combineReducers({\n    authenticators: authenticatorsReducer,\n    password: passwordReducer,\n});\n\nexport default authenticateReducer;\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport React, { useEffect, useMemo } from \"react\";\nimport { getMeta } from \"@library/utility/appUtils\";\n\n/**\n * A component for displaying and setting the document title.\n *\n * This component can render a default title or a custom title depending on the usage.\n *\n * @example <caption>Render the title in the default h1</caption>\n * <DocumentTitle title=\"Page Title\" />\n *\n * @example <caption>Render a custom title</caption>\n * <DocumentTitle title=\"Title Bar Title >\n *     <h1>Page Title</h1>\n * </DocumentTitle>\n */\nexport default function DocumentTitle(props: IProps) {\n    /**\n     * Calculate the status bar title from the props.\n     *\n     * @param props - The props used to calculate the title.\n     * @returns Returns the title as a string.\n     */\n    const headTitle = useMemo(() => {\n        const siteTitle: string = getMeta(\"ui.siteName\", \"\");\n        const parts: string[] = [];\n\n        if (props.title && props.title.length > 0) {\n            parts.push(props.title);\n        }\n        if (siteTitle.length > 0 && siteTitle !== props.title) {\n            parts.push(siteTitle);\n        }\n\n        return parts.join(\" - \");\n    }, [props.title]);\n\n    useEffect(() => {\n        document.title = headTitle;\n    }, [headTitle]);\n\n    return <>{props.children ? props.children : <h1>{props.title}</h1>}</>;\n}\n\ninterface IProps {\n    title: string;\n    children?: React.ReactNode;\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport React from \"react\";\nimport { t } from \"@library/utility/appUtils\";\nimport { inputBlockClasses } from \"@library/forms/InputBlockStyles\";\nimport classNames from \"classnames\";\n\ninterface IProps {\n    visible: boolean;\n}\n\nexport default class Or extends React.PureComponent<IProps, {}> {\n    public static defaultProps: IProps = {\n        visible: true,\n    };\n\n    public render() {\n        const classes = inputBlockClasses();\n        return this.props.visible ? (\n            <div className={classNames(classes.labelText, \"authenticateUser-divider\")}>{t(\"or\")}</div>\n        ) : null;\n    }\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { t } from \"@library/utility/appUtils\";\nimport React from \"react\";\nimport Paragraph from \"@library/layout/Paragraph\";\nimport { IUserAuthenticator } from \"@dashboard/@types/api/authenticate\";\n\ninterface IProps {\n    ssoMethods?: IUserAuthenticator[];\n}\n\nexport default class SSOMethods extends React.Component<IProps> {\n    public render() {\n        if (!this.props.ssoMethods || this.props.ssoMethods.length === 0) {\n            return null;\n        }\n\n        const ssoMethods = this.props.ssoMethods.map((method, index) => {\n            const methodStyles = {\n                backgroundColor: method.ui.backgroundColor || undefined,\n                color: method.ui.foregroundColor || undefined,\n            };\n            return (\n                <a\n                    href={method.ui.url}\n                    key={index}\n                    className=\"BigButton button Button button-sso button-fullWidth\"\n                    style={methodStyles}\n                >\n                    <span className=\"button-ssoContents\">\n                        <img src={method.ui.photoUrl || undefined} className=\"ssoMethod-icon\" aria-hidden={true} />\n                        <span className=\"button-ssoLabel\">{t(method.ui.buttonName)}</span>\n                        <span className=\"ssoMethod-icon ssoMethod-iconSpacer\" aria-hidden=\"true\" />\n                    </span>\n                </a>\n            );\n        });\n\n        return (\n            <div className=\"ssoMethods\">\n                <Paragraph>{t(\"Sign in with one of the following:\")}</Paragraph>\n                {ssoMethods}\n            </div>\n        );\n    }\n}\n","/*\n * @author Stéphane LaFlèche <stephane.l@vanillaforums.com>\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport React from \"react\";\nimport {\n    absolutePosition,\n    borders,\n    colorOut,\n    defaultTransition,\n    disabledInput,\n    flexHelper,\n    srOnly,\n    unit,\n    userSelect,\n    margins,\n} from \"@library/styles/styleHelpers\";\nimport { globalVariables } from \"@library/styles/globalStyleVars\";\nimport { styleFactory, useThemeCache, variableFactory } from \"@library/styles/styleUtils\";\nimport { formElementsVariables } from \"@library/forms/formElementStyles\";\nimport { em, important, percent, px } from \"csx\";\nimport { NestedCSSProperties } from \"typestyle/lib/types\";\n\nexport const checkRadioVariables = useThemeCache(() => {\n    const globalVars = globalVariables();\n    const formElementVars = formElementsVariables();\n    const themeVars = variableFactory(\"checkRadio\");\n\n    const border = themeVars(\"border\", {\n        width: formElementVars.border.width,\n        radius: 2,\n        color: globalVars.mixBgAndFg(0.5),\n    });\n\n    const main = themeVars(\"check\", {\n        fg: globalVars.mainColors.bg,\n        bg: globalVars.mainColors.bg,\n        checked: {\n            fg: globalVars.elementaryColors.white,\n            bg: globalVars.mainColors.primary,\n        },\n        hover: {\n            border: {\n                color: globalVars.mainColors.primary,\n            },\n            bg: globalVars.mainColors.primary.fade(0.1),\n            opacity: 0.8,\n        },\n    });\n\n    const checkBox = themeVars(\"checkBox\", {\n        check: {\n            width: 10,\n            height: 10,\n        },\n        disk: {\n            width: 6,\n            height: 6,\n        },\n    });\n\n    const radioButton = themeVars(\"radioButton\", {\n        icon: {\n            width: 6,\n            height: 6,\n        },\n    });\n\n    const labelNote = themeVars(\"labelNote\", {\n        fontSize: \".8em\",\n        opacity: 0.7,\n    });\n\n    const sizing = themeVars(\"sizing\", {\n        width: 16,\n    });\n\n    return {\n        border,\n        main,\n        checkBox,\n        radioButton,\n        labelNote,\n        sizing,\n    };\n});\n\nexport const checkRadioClasses = useThemeCache(() => {\n    const globalVars = globalVariables();\n    const vars = checkRadioVariables();\n    const style = styleFactory(\"checkRadio\");\n    const flexes = flexHelper();\n\n    //.radioButton-label,\n    // .checkbox-label\n    const label = style(\"label\", {\n        lineHeight: unit(vars.sizing.width),\n        marginLeft: unit(8),\n        cursor: \"pointer\",\n        ...userSelect(),\n    });\n\n    const labelNote = style(\"labelNote\", {\n        display: \"inline-block\",\n        fontSize: unit(vars.labelNote.fontSize),\n        marginLeft: unit(24),\n        opacity: vars.labelNote.opacity,\n        verticalAlign: \"middle\",\n    });\n\n    // .radioButton-disk,\n    // .checkbox-box\n    const iconContainer = style(\"iconContainer\", {\n        ...defaultTransition(\"border\", \"background\", \"opacity\"),\n        position: \"relative\",\n        display: \"inline-block\",\n        width: unit(vars.sizing.width),\n        height: unit(vars.sizing.width),\n        verticalAlign: em(-0.18),\n        cursor: \"pointer\",\n        backgroundColor: colorOut(vars.main.bg),\n        ...borders(vars.border),\n    } as NestedCSSProperties);\n\n    const radioIcon = style(\"radioIcon\", {\n        ...absolutePosition.middleLeftOfParent(),\n        display: \"none\",\n        width: unit(vars.radioButton.icon.width),\n        height: unit(vars.radioButton.icon.height),\n        margin: \"auto\",\n    });\n\n    const checkIcon = style(\"checkBoxIcon\", {\n        ...absolutePosition.middleOfParent(),\n        display: \"none\",\n        width: unit(vars.checkBox.check.width),\n        height: unit(vars.checkBox.check.height),\n        color: vars.main.fg.toString(),\n        margin: \"auto\",\n    });\n\n    const disk = style(\"disk\", {\n        borderRadius: percent(50),\n    });\n\n    // .radioButton-state,\n    // .checkbox-state\n    const state = style(\"state\", {\n        ...absolutePosition.fullSizeOfParent(),\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        color: vars.main.checked.fg.toString(),\n    });\n\n    const diskIcon = style({\n        display: \"none\",\n        width: vars.checkBox.disk.width,\n        height: vars.checkBox.disk.height,\n    });\n\n    // .radioButton-input,\n    // .checkbox-input\n    const input = style(\"input\", {\n        ...srOnly(),\n        $nest: {\n            [`&:not([disabled]):focus, &:not([disabled]):active, &:not([disabled]).focus-visible`]: {\n                $nest: {\n                    [`& + .${checkIcon}`]: {\n                        borderColor: vars.main.hover.border.color.toString(),\n                        opacity: vars.main.hover.opacity,\n                        backgroundColor: vars.main.hover.bg.toString(),\n                    },\n                },\n            },\n            [`&:checked + .${iconContainer}`]: {\n                backgroundColor: important(vars.main.checked.bg.toString()),\n                borderColor: vars.main.checked.fg.toString(),\n                $nest: {\n                    [`& .${checkIcon}`]: {\n                        display: \"block\",\n                    },\n                    [`& .${diskIcon}`]: {\n                        display: \"block\",\n                    },\n                },\n            },\n            [`&.isDisabled, &[disabled]`]: {\n                $nest: {\n                    \"&:not(:checked)\": {\n                        $nest: {\n                            [`& + .${checkIcon}`]: {\n                                backgroundColor: vars.main.bg.toString(),\n                            },\n                        },\n                    },\n                    [`& ~ .${label}, & + .${checkIcon}`]: {\n                        ...disabledInput(),\n                    },\n                },\n            },\n        },\n    });\n\n    //.radioButton,\n    //.checkbox\n    const root = style({\n        display: important(\"flex\"),\n        flexWrap: \"wrap\",\n        alignItems: \"center\",\n        whiteSpace: \"nowrap\",\n        outline: 0,\n        cursor: \"pointer\",\n        $nest: {\n            [`&:hover .${input}:not([disabled]) + .${iconContainer}`]: {\n                borderColor: colorOut(vars.main.hover.border.color),\n                backgroundColor: colorOut(vars.main.hover.bg),\n            },\n            [`&.focus-accessible .${input}:not([disabled]) + .${iconContainer}`]: {\n                borderColor: colorOut(vars.main.hover.border.color),\n                backgroundColor: colorOut(vars.main.hover.bg),\n            },\n            [`&:focus .${input}:not([disabled]) + .${iconContainer}`]: {\n                borderColor: colorOut(vars.main.hover.border.color),\n                backgroundColor: colorOut(vars.main.hover.bg),\n            },\n            [`.${input}:not([disabled]):hover + .${iconContainer}`]: {\n                borderColor: colorOut(vars.main.hover.border.color),\n                backgroundColor: colorOut(vars.main.hover.bg),\n            },\n            [`.${input}:not([disabled]):focus + .${iconContainer}`]: {\n                borderColor: colorOut(vars.main.hover.border.color),\n                backgroundColor: colorOut(vars.main.hover.bg),\n            },\n            [`& + &`]: {\n                marginTop: px(globalVars.spacer.size / 2),\n            },\n            [`&.isHorizontal.isHorizontal.isHorizontal`]: margins({\n                all: 0,\n                right: px(globalVars.spacer.size / 2),\n            }),\n        },\n    });\n\n    const group = style(\"group\", {\n        marginTop: unit(globalVars.spacer.size / 2),\n    });\n\n    return {\n        root,\n        label,\n        labelNote,\n        iconContainer,\n        radioIcon,\n        checkIcon,\n        disk,\n        state,\n        diskIcon,\n        input,\n        group,\n    };\n});\n","/**\n * @author Stéphane LaFlèche <stephane.l@vanillaforums.com>\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport React from \"react\";\nimport { getRequiredID, IOptionalComponentID, useUniqueID } from \"@library/utility/idUtils\";\nimport { checkRadioClasses } from \"./checkRadioStyles\";\nimport classNames from \"classnames\";\nimport { t } from \"@library/utility/appUtils\";\n\ninterface IProps extends IOptionalComponentID {\n    id?: string;\n    className?: string;\n    checked?: boolean;\n    disabled?: boolean;\n    onChange?: any;\n    label: string;\n    isHorizontal?: boolean;\n}\n\nexport default function CheckBox(props: IProps) {\n    const labelID = useUniqueID(\"checkbox_label\");\n    const classes = checkRadioClasses();\n\n    const { isHorizontal } = props;\n\n    return (\n        <label className={classNames(props.className, classes.root, { isHorizontal })}>\n            <input\n                className={classes.input}\n                aria-labelledby={labelID}\n                type=\"checkbox\"\n                onChange={props.onChange}\n                checked={props.checked}\n                disabled={props.disabled}\n                tabIndex={0}\n            />\n            <span className={classes.iconContainer} aria-hidden=\"true\">\n                <span className={classes.state}>\n                    <svg\n                        className={classNames(classes.checkIcon)}\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 10 10\"\n                    >\n                        <title>{t(\"✓\")}</title>\n                        <path\n                            fill=\"currentColor\"\n                            d=\"M10,2.7c0-0.2-0.1-0.3-0.2-0.4L8.9,1.3c-0.2-0.2-0.6-0.2-0.9,0L3.8,5.6L1.9,3.7c-0.2-0.2-0.6-0.2-0.9,0L0.2,4.6c-0.2,0.2-0.2,0.6,0,0.9l3.2,3.2c0.2,0.2,0.6,0.2,0.9,0l5.5-5.5C9.9,3,10,2.8,10,2.7z\"\n                        />\n                    </svg>\n                </span>\n            </span>\n            {props.label && (\n                <span id={labelID} className={classes.label}>\n                    {props.label}\n                </span>\n            )}\n        </label>\n    );\n}\n","/**\n * @author Stéphane LaFlèche <stephane.l@vanillaforums.com>\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport React from \"react\";\nimport { ButtonTypes } from \"@library/forms/buttonStyles\";\nimport Button from \"@library/forms/Button\";\nimport { IOptionalComponentID } from \"@library/utility/idUtils\";\nimport classNames from \"classnames\";\n\ninterface IProps extends IOptionalComponentID {\n    children: React.ReactNode;\n    className?: string;\n    disabled?: boolean;\n    legacyMode?: boolean;\n    baseClass?: ButtonTypes;\n    tabIndex?: number;\n}\n\nexport default class ButtonSubmit extends React.Component<IProps, IOptionalComponentID> {\n    public static defaultProps = {\n        disabled: false,\n        legacyMode: false,\n    };\n\n    constructor(props) {\n        super(props);\n    }\n\n    public render() {\n        return (\n            <Button\n                id={this.props.id}\n                disabled={this.props.disabled}\n                submit={true}\n                className={this.props.className}\n                prefix=\"submitButton\"\n                legacyMode={this.props.legacyMode}\n                baseClass={this.props.baseClass}\n                tabIndex={this.props.tabIndex}\n            >\n                {this.props.children}\n            </Button>\n        );\n    }\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { generateApiActionCreators, ActionsUnion, apiThunk } from \"@library/redux/utility\";\nimport { IAuthenticatePasswordResponseData, IAuthenticatePasswordParams } from \"@dashboard/@types/api/authenticate\";\nimport apiv2 from \"@library/apiv2\";\nimport { AxiosResponse, AxiosError } from \"axios\";\nimport { formatUrl } from \"@library/utility/appUtils\";\n\n// Authenticating user /authenticate/password\nexport const POST_AUTHENTICATE_PASSWORD_REQUEST = \"POST_AUTHENTICATE_PASSWORD_REQUEST\";\nexport const POST_AUTHENTICATE_PASSWORD_ERROR = \"POST_AUTHENTICATE_PASSWORD_ERROR\";\nexport const POST_AUTHENTICATE_PASSWORD_SUCCESS = \"POST_AUTHENTICATE_PASSWORD_SUCCESS\";\n\nconst authenticatePasswordActions = generateApiActionCreators(\n    POST_AUTHENTICATE_PASSWORD_REQUEST,\n    POST_AUTHENTICATE_PASSWORD_SUCCESS,\n    POST_AUTHENTICATE_PASSWORD_ERROR,\n    // https://github.com/Microsoft/TypeScript/issues/10571#issuecomment-345402872\n    {} as IAuthenticatePasswordResponseData,\n    {} as IAuthenticatePasswordParams,\n);\n\nexport const postAuthenticatePassword = (params: IAuthenticatePasswordParams) => dispatch => {\n    dispatch(authenticatePasswordActions.request(params));\n    apiv2\n        .post(\"/authenticate/password\", params)\n        .then((response: AxiosResponse) => {\n            dispatch(authenticatePasswordActions.success(response, params));\n            const urlParms = new URLSearchParams();\n            window.location.href = formatUrl(urlParms.get(\"target\") || \"/\");\n        })\n        .catch((axiosError: AxiosError) => {\n            const error = axiosError.response ? axiosError.response.data : (axiosError as any);\n            dispatch(authenticatePasswordActions.error(error));\n        });\n};\n\nexport type ActionTypes = ActionsUnion<typeof authenticatePasswordActions>;\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { getFieldErrors, getGlobalErrorMessage } from \"@library/apiv2\";\nimport { t } from \"@library/utility/appUtils\";\nimport React from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport InputTextBlock from \"@library/forms/InputTextBlock\";\nimport Checkbox from \"@library/forms/Checkbox\";\nimport ButtonSubmit from \"@library/forms/ButtonSubmit\";\nimport Paragraph from \"@library/layout/Paragraph\";\nimport { IRequiredComponentID, getRequiredID } from \"@library/utility/idUtils\";\nimport { IStoreState, IPasswordState } from \"@dashboard/@types/state\";\nimport { connect } from \"react-redux\";\nimport { LoadStatus } from \"@library/@types/api/core\";\nimport { postAuthenticatePassword } from \"@dashboard/pages/authenticate/passwordActions\";\nimport { IAuthenticatePasswordParams } from \"@dashboard/@types/api/authenticate\";\nimport { inputBlockClasses } from \"@library/forms/InputBlockStyles\";\nimport classNames from \"classnames\";\n\ninterface IProps {\n    passwordState: IPasswordState;\n    authenticate: typeof postAuthenticatePassword;\n    defaultUsername?: string;\n}\n\ninterface IState extends IRequiredComponentID {\n    rememberMe: boolean;\n    username: string;\n    password: string;\n    id: string;\n}\n\n/**\n * Username + password from for signins.\n */\nexport class PasswordForm extends React.Component<IProps, IState> {\n    private usernameInput: React.RefObject<InputTextBlock> = React.createRef();\n    private passwordInput: React.RefObject<InputTextBlock> = React.createRef();\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            id: getRequiredID(props, \"passwordForm\"),\n            rememberMe: true,\n            username: \"\",\n            password: \"\",\n        };\n    }\n\n    public render() {\n        let formDescribedBy;\n        const globalErrorMessage = getGlobalErrorMessage(this.props.passwordState.error, [\"username\", \"password\"]);\n        const classes = inputBlockClasses();\n        if (globalErrorMessage) {\n            formDescribedBy = this.formDescriptionID;\n        }\n\n        return (\n            <form\n                id={this.state.id}\n                aria-describedby={formDescribedBy}\n                className=\"passwordForm\"\n                method=\"post\"\n                onSubmit={this.handleSubmit}\n                noValidate\n            >\n                <Paragraph id={this.formDescriptionID} className=\"authenticateUser-paragraph\" isError={true}>\n                    globalErrorMessage\n                </Paragraph>\n                <InputTextBlock\n                    label={t(\"Email/Username\")}\n                    errors={getFieldErrors(this.props.passwordState.error, \"username\")}\n                    ref={this.usernameInput}\n                    inputProps={{\n                        required: true,\n                        disabled: !this.allowEdit,\n                        onChange: this.handleUsernameChange,\n                        defaultValue: this.props.defaultUsername || \"\",\n                        value: this.state.username,\n                    }}\n                />\n                <InputTextBlock\n                    label={t(\"Password\")}\n                    ref={this.passwordInput}\n                    errors={getFieldErrors(this.props.passwordState.error, \"password\")}\n                    inputProps={{\n                        required: true,\n                        disabled: !this.allowEdit,\n                        type: \"password\",\n                        onChange: this.handlePasswordChange,\n                        value: this.state.password,\n                    }}\n                />\n                <div className={classNames(classes.root)}>\n                    <div className=\"rememberMeAndForgot\">\n                        <span className=\"rememberMeAndForgot-rememberMe\">\n                            <Checkbox\n                                label={t(\"Keep me signed in\")}\n                                onChange={this.handleCheckBoxChange}\n                                checked={this.state.rememberMe}\n                            />\n                        </span>\n                        <span className=\"rememberMeAndForgot-forgot\">\n                            <Link to=\"/authenticate/recoverpassword\">{t(\"Forgot your password?\")}</Link>\n                        </span>\n                    </div>\n                </div>\n                <ButtonSubmit disabled={!this.allowSubmit} legacyMode={true}>\n                    {t(\"Sign In\")}\n                </ButtonSubmit>\n            </form>\n        );\n    }\n\n    /**\n     * Whenever the component gets new form state, we check for errors and focus the relavent errored inputs.\n     */\n    public componentDidUpdate(prevProps: IProps) {\n        if (this.props.passwordState === prevProps.passwordState) {\n            return;\n        }\n\n        if (getFieldErrors(this.props.passwordState.error, \"username\")) {\n            this.usernameInput.current!.select();\n        } else if (getFieldErrors(this.props.passwordState.error, \"password\")) {\n            this.passwordInput.current!.select();\n        } else {\n            this.usernameInput.current!.select();\n        }\n    }\n\n    /**\n     * Whether or not inputs in the form can be edited.\n     */\n    private get allowEdit() {\n        return this.props.passwordState.status !== LoadStatus.LOADING;\n    }\n\n    private get allowSubmit() {\n        const { username, password } = this.state;\n        return username.length > 0 && password.length > 0;\n    }\n\n    /**\n     * Handler for the remember me checkbox.\n     */\n    private handleCheckBoxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ rememberMe: event.target.checked || false });\n    };\n\n    /**\n     * Change handler for the email input.\n     */\n    private handleUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { value } = event.target;\n        this.setState({ username: value });\n    };\n\n    /**\n     * Change handler for the email input.\n     */\n    private handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { value } = event.target;\n        this.setState({ password: value });\n    };\n\n    /**\n     * Submit handler for the form.\n     */\n    private handleSubmit = (event: React.SyntheticEvent<any>) => {\n        event.preventDefault();\n        const { username, password, rememberMe } = this.state;\n\n        this.props.authenticate({\n            username,\n            password,\n            persist: rememberMe,\n        });\n    };\n\n    /**\n     * Get the description ID for the form.\n     */\n    private get formDescriptionID() {\n        return this.state.id + \"-description\";\n    }\n}\n\nfunction mapStateToProps({ authenticate }: IStoreState) {\n    return {\n        passwordState: authenticate.password,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        authenticate: (params: IAuthenticatePasswordParams) => {\n            dispatch(postAuthenticatePassword(params));\n        },\n    };\n}\n\nconst withRedux = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n);\nexport default withRedux(withRouter(PasswordForm));\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { t } from \"@library/utility/appUtils\";\nimport { LoadStatus } from \"@library/@types/api/core\";\nimport { getRequiredID, IRequiredComponentID } from \"@library/utility/idUtils\";\nimport DocumentTitle from \"@library/routing/DocumentTitle\";\nimport Or from \"@dashboard/forms/Or\";\nimport { IStoreState, IAuthenticatorState } from \"@dashboard/@types/state\";\nimport { getUserAuthenticators } from \"@dashboard/pages/authenticate/authenticatorsActions\";\nimport SSOMethods from \"@dashboard/pages/authenticate/components/SSOMethods\";\nimport PasswordForm from \"@dashboard/pages/authenticate/components/PasswordForm\";\n\ninterface IProps {\n    authenticatorState: IAuthenticatorState;\n    loadAuthenticators: typeof getUserAuthenticators;\n}\n\nexport class SignInPage extends React.Component<IProps, IRequiredComponentID> {\n    public pageTitleID: string;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: getRequiredID(props, \"SignInPage\"),\n        };\n    }\n\n    get titleID(): string {\n        return this.state.id + \"-pageTitle\";\n    }\n\n    public componentDidMount() {\n        if (this.props.authenticatorState.status === LoadStatus.PENDING) {\n            this.props.loadAuthenticators();\n        }\n    }\n\n    public render() {\n        const { authenticatorState } = this.props;\n\n        if (authenticatorState.status !== LoadStatus.SUCCESS) {\n            // TODO: Use a generic fallback component for the other states.\n            return null;\n        }\n\n        let showPassword = false;\n        const ssoMethods = authenticatorState.data!.filter(a => {\n            if (a.type === \"password\") {\n                showPassword = true;\n                return false;\n            }\n            return true;\n        });\n\n        return (\n            <div id={this.state.id} className=\"authenticateUserCol\">\n                <DocumentTitle title={t(\"Sign In\")}>\n                    <h1 id={this.titleID} className=\"isCentered\">\n                        {t(\"Sign In\")}\n                    </h1>\n                </DocumentTitle>\n                <SSOMethods ssoMethods={ssoMethods} />\n                <Or visible={showPassword && ssoMethods.length > 0} />\n                {showPassword && <PasswordForm />}\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps({ authenticate }: IStoreState) {\n    return {\n        authenticatorState: authenticate.authenticators,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        loadAuthenticators: () => {\n            dispatch(getUserAuthenticators());\n        },\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(SignInPage);\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport * as React from \"react\";\nimport { t } from \"@library/utility/appUtils\";\nimport { uniqueIDFromPrefix } from \"@library/utility/idUtils\";\nimport DocumentTitle from \"@library/routing/DocumentTitle\";\nimport PasswordForm from \"@dashboard/pages/authenticate/components/PasswordForm\";\n\nexport default class PasswordPage extends React.Component {\n    private id = uniqueIDFromPrefix(\"PasswordPage\");\n\n    get titleID(): string {\n        return this.id + \"-pageTitle\";\n    }\n\n    public render() {\n        return (\n            <div className=\"authenticateUserCol\">\n                <DocumentTitle title={t(\"Sign In\")}>\n                    <h1 id={this.titleID} className=\"isCentered\">\n                        {t(\"Sign In\")}\n                    </h1>\n                </DocumentTitle>\n                <PasswordForm />\n            </div>\n        );\n    }\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { t } from \"@library/utility/appUtils\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\ninterface IProps {\n    onClick?: () => void;\n}\n\nexport default class RememberPasswordLink extends React.Component<IProps> {\n    public render() {\n        return (\n            <p className=\"authenticateUser-paragraph isCentered\">\n                {t(\"Remember your password?\")}{\" \"}\n                <Link onClick={this.props.onClick} to=\"/authenticate/signin\">\n                    {t(\"Sign In\")}\n                </Link>\n            </p>\n        );\n    }\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { getFieldErrors, getGlobalErrorMessage } from \"@library/apiv2\";\nimport { LoadStatus } from \"@library/@types/api/core\";\nimport { t } from \"@library/utility/appUtils\";\nimport DocumentTitle from \"@library/routing/DocumentTitle\";\nimport React from \"react\";\nimport ButtonSubmit from \"@library/forms/ButtonSubmit\";\nimport Paragraph from \"@library/layout/Paragraph\";\nimport InputTextBlock from \"@library/forms/InputTextBlock\";\nimport uniqueId from \"lodash/uniqueId\";\nimport { IStoreState, IRequestPasswordState } from \"@dashboard/@types/state\";\nimport { connect } from \"react-redux\";\nimport {\n    postRequestPassword,\n    afterRequestPasswordSuccessNavigate,\n} from \"@dashboard/pages/recoverPassword/recoverPasswordActions\";\nimport RememberPasswordLink from \"@dashboard/pages/authenticate/components/RememberPasswordLink\";\nimport { IRequestPasswordOptions } from \"@dashboard/@types/api/authenticate\";\n\ninterface IState {\n    email: string;\n}\n\ninterface IProps {\n    requestPasswordState: IRequestPasswordState;\n    postRequestPassword: typeof postRequestPassword;\n    onNavigateAway: () => void;\n}\n\nexport class RecoverPasswordPage extends React.Component<IProps, IState> {\n    public id = uniqueId(\"RecoverPasswordPage\");\n    public pageTitleID: string;\n    public emainInput: React.RefObject<InputTextBlock> = React.createRef();\n\n    constructor(props) {\n        super(props);\n        this.id = this.pageTitleID = this.id + \"-pageTitle\";\n\n        this.state = {\n            email: \"\",\n        };\n    }\n\n    public render() {\n        const pageTitle = (\n            <DocumentTitle title={t(\"Recover Password\")}>\n                <h1 id={this.pageTitleID} className=\"isCentered\">\n                    {t(\"Recover Password\")}\n                </h1>\n            </DocumentTitle>\n        );\n\n        if (this.props.requestPasswordState.status === LoadStatus.SUCCESS) {\n            return (\n                <div id={this.id} className=\"authenticateUserCol\">\n                    {pageTitle}\n                    <Paragraph className=\"authenticateUser-paragraph\">\n                        {t(\"A message has been sent to your email address with password reset instructions.\")}\n                    </Paragraph>\n                    <RememberPasswordLink onClick={this.props.onNavigateAway} />\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"authenticateUserCol\">\n                    {pageTitle}\n                    <Paragraph className=\"authenticateUser-paragraph\">\n                        {t(\"RecoverPasswordLabelCode\", \"Enter your email to continue.\")}\n                    </Paragraph>\n                    <form id={this.id} onSubmit={this.handleSubmit} aria-labelledby={this.pageTitleID} noValidate>\n                        <Paragraph className=\"authenticateUser-paragraph\" isError={true}>\n                            {getGlobalErrorMessage(this.props.requestPasswordState.error, [\"email\"])}\n                        </Paragraph>\n                        <InputTextBlock\n                            label={t(\"Email\")}\n                            inputProps={{\n                                required: true,\n                                value: this.state.email,\n                                onChange: this.handleEmailChange,\n                                disabled: !this.allowEdit,\n                            }}\n                            errors={getFieldErrors(this.props.requestPasswordState.error, \"email\")}\n                            ref={this.emainInput}\n                        />\n                        <ButtonSubmit disabled={!this.allowEdit || this.state.email.length === 0} legacyMode={true}>\n                            {t(\"Request a new password\")}\n                        </ButtonSubmit>\n                    </form>\n                    <RememberPasswordLink />\n                </div>\n            );\n        }\n    }\n\n    /**\n     * Whenever the component gets new form state, we check for errors and focus the relavent errored inputs.\n     */\n    public componentDidUpdate(prevProps: IProps) {\n        if (this.props.requestPasswordState === prevProps.requestPasswordState) {\n            return;\n        }\n        if (this.props.requestPasswordState.status === LoadStatus.ERROR) {\n            this.emainInput.current!.select();\n        }\n    }\n\n    /**\n     * Change handler for the email input.\n     */\n    private handleEmailChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { value } = event.target;\n        this.setState({ email: value });\n    };\n\n    /**\n     * Submit handler for the form.\n     */\n    private handleSubmit = event => {\n        event.preventDefault();\n        const { email } = this.state;\n        this.props.postRequestPassword({ email });\n    };\n\n    /**\n     * Whether or not the user can edit elements in the form.\n     */\n    private get allowEdit() {\n        return this.props.requestPasswordState.status !== LoadStatus.LOADING;\n    }\n}\n\nfunction mapStateToProps({ authenticate }: IStoreState) {\n    return {\n        requestPasswordState: authenticate.password,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        postRequestPassword: (params: IRequestPasswordOptions) => {\n            dispatch(postRequestPassword(params));\n        },\n        onNavigateAway: () => {\n            dispatch(afterRequestPasswordSuccessNavigate());\n        },\n    };\n}\n\nconst withRedux = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n);\n\nexport default withRedux(RecoverPasswordPage);\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport React from \"react\";\nimport { t } from \"@library/utility/appUtils\";\nimport DocumentTitle from \"@library/routing/DocumentTitle\";\nimport { sprintf } from \"sprintf-js\";\n\nexport default class NotFoundPage extends React.PureComponent<IProps> {\n    public static defaultProps = {\n        type: \"Page\",\n    };\n\n    public render() {\n        return (\n            <div className=\"Center SplashInfo\">\n                <DocumentTitle title={this.title} />\n                <div>{this.message}</div>\n            </div>\n        );\n    }\n\n    private get title() {\n        return this.props.title || sprintf(t(\"%s Not Found\"), t(this.props.type));\n    }\n\n    private get message() {\n        return (\n            this.props.message ||\n            sprintf(t(\"The %s you were looking for could not be found.\"), t(this.props.type.toLowerCase()))\n        );\n    }\n}\n\ninterface IProps {\n    type: string;\n    title?: string;\n    message?: string;\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport React, { useMemo, useEffect } from \"react\";\nimport { LinkContextProvider } from \"@library/routing/links/LinkContextProvider\";\nimport { Router as ReactRouter, Switch, Route } from \"react-router-dom\";\nimport { formatUrl } from \"@library/utility/appUtils\";\nimport { createBrowserHistory, History } from \"history\";\nimport NotFoundPage from \"@library/routing/NotFoundPage\";\n\ninterface IProps {\n    disableDynamicRouting?: boolean;\n    sectionRoot?: string;\n    onRouteChange?: (history: History) => void;\n}\n\nexport function Router(props: IProps) {\n    const { onRouteChange } = props;\n    const history = useMemo(() => createBrowserHistory({ basename: formatUrl(\"\") }), []);\n\n    useEffect(() => {\n        if (onRouteChange) {\n            const unregister = history.listen(() => onRouteChange(history));\n            // Return the cleanup function.\n            return unregister;\n        }\n    }, [history, onRouteChange]);\n\n    let routes = (\n        <Switch>\n            {Router._routes}\n            <Route key=\"@not-found\" component={NotFoundPage} />\n        </Switch>\n    );\n\n    if (!props.disableDynamicRouting) {\n        routes = (\n            <LinkContextProvider linkContext={formatUrl(props.sectionRoot || \"/\", true)}>{routes}</LinkContextProvider>\n        );\n    }\n\n    return <ReactRouter history={history}>{routes}</ReactRouter>;\n}\n\n/**\n * The currently registered routes.\n * @private\n */\nRouter._routes = [];\n\n/**\n * Register one or more routes to the app component.\n *\n * @param routes An array of routes to add.\n */\nRouter.addRoutes = (routes: React.ReactNode[]) => {\n    if (!Array.isArray(routes)) {\n        Router._routes.push(routes);\n    } else {\n        Router._routes.push(...routes);\n    }\n};\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport React from \"react\";\nimport { onContent } from \"@library/utility/appUtils\";\nimport { Route } from \"react-router-dom\";\nimport { registerReducer } from \"@library/redux/reducerRegistry\";\n// The forum section needs these legacy scripts that have been moved into the bundled JS so it could be refactored.\n// Other sections should not need this yet.\nimport \"@dashboard/legacy\";\nimport { convertAllUserContent, initAllUserContent } from \"@library/content\";\nimport authenticateReducer from \"@dashboard/pages/authenticate/authenticateReducer\";\nimport SignInPage from \"@dashboard/pages/authenticate/SignInPage\";\nimport PasswordPage from \"@dashboard/pages/authenticate/PasswordPage\";\nimport RecoverPasswordPage from \"@dashboard/pages/recoverPassword/RecoverPasswordPage\";\nimport NotificationsModel from \"@library/features/notifications/NotificationsModel\";\nimport { Router } from \"@library/Router\";\nimport { AppContext } from \"@library/AppContext\";\nimport { addComponent } from \"@library/utility/componentRegistry\";\n\ninitAllUserContent();\nonContent(convertAllUserContent);\n\n// Redux\nregisterReducer(\"authenticate\", authenticateReducer);\nregisterReducer(\"notifications\", new NotificationsModel().reducer);\n\nRouter.addRoutes([\n    <Route exact path=\"/authenticate/signin\" component={SignInPage} key=\"signin\" />,\n    <Route exact path=\"/authenticate/password\" component={PasswordPage} key=\"password\" />,\n    <Route exact path=\"/authenticate/recoverpassword\" component={RecoverPasswordPage} key=\"recover\" />,\n]);\n\n// Routing\naddComponent(\"App\", () => (\n    <AppContext variablesOnly>\n        <Router disableDynamicRouting />\n    </AppContext>\n));\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\nimport NotificationsActions from \"@library/features/notifications/NotificationsActions\";\nimport ReduxReducer from \"@library/redux/ReduxReducer\";\nimport produce from \"immer\";\nimport { ILoadable, LoadStatus } from \"@library/@types/api/core\";\nimport { INotification } from \"@library/@types/api/notifications\";\n\ninterface INotificationsState {\n    notificationsByID: ILoadable<{ [key: number]: INotification }>;\n}\n\nexport interface INotificationsStoreState {\n    notifications: INotificationsState;\n}\n\nexport interface IWithNotifications extends INotificationsState {}\n\n/**\n * Manage notification state in Redux.\n */\nexport default class NotificationsModel implements ReduxReducer<INotificationsState> {\n    public readonly initialState: INotificationsState = {\n        notificationsByID: {\n            data: {},\n            status: LoadStatus.PENDING,\n        },\n    };\n\n    /**\n     * Update the notifications state, based on the dispatched action.\n     *\n     * @param state Previous state of the store.\n     * @param action Name for the type of action that was dispatched.\n     */\n    public reducer = (\n        state: INotificationsState = this.initialState,\n        action: typeof NotificationsActions.ACTION_TYPES,\n    ): INotificationsState => {\n        return produce(state, nextState => {\n            switch (action.type) {\n                case NotificationsActions.GET_NOTIFICATIONS_REQUEST:\n                    nextState.notificationsByID.status = LoadStatus.LOADING;\n                    break;\n                case NotificationsActions.GET_NOTIFICATIONS_RESPONSE: {\n                    nextState.notificationsByID.status = LoadStatus.SUCCESS;\n                    nextState.notificationsByID.data = {};\n                    const notifications = action.payload.data as INotification[];\n                    notifications.forEach(notification => {\n                        nextState.notificationsByID.data![notification.notificationID] = notification;\n                    });\n                    break;\n                }\n                case NotificationsActions.GET_NOTIFICATIONS_ERROR:\n                    nextState.notificationsByID.status = LoadStatus.ERROR;\n                    nextState.notificationsByID.error = action.payload;\n                    break;\n                case NotificationsActions.MARK_ALL_READ_RESPONSE: {\n                    const { data } = nextState.notificationsByID;\n                    if (data) {\n                        for (const id of Object.keys(data)) {\n                            (data[id] as INotification).read = true;\n                        }\n                    }\n                    break;\n                }\n            }\n        });\n    };\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nexport interface ILocale {\n    localeID: string;\n    localeKey: string;\n    regionalKey: string;\n    displayNames: {\n        [localeKey: string]: string;\n    };\n}\n\nlet currentLocale = \"en\";\nlet localeStore: ILocale[] = [];\nlet callbacks: Array<() => void> = [];\n\n/**\n * Get the available locales.\n */\nexport function getLocales(): ILocale[] {\n    return localeStore;\n}\n\n/**\n * Register a handler for if the locales change.\n * @param callback\n */\nexport function onLocaleChange(callback: () => void) {\n    callbacks.push(callback);\n}\n\n/**\n * Set the current locale.\n */\nexport function setCurrentLocale(localeKey: string) {\n    currentLocale = localeKey;\n    callbacks.forEach(callback => callback());\n}\n\n/**\n * Get the current locale.\n */\nexport function getCurrentLocale() {\n    return currentLocale;\n}\n\n/**\n * Load a group of locales.\n */\nexport function loadLocales(locales: ILocale[]) {\n    localeStore = [...localeStore, ...locales];\n    callbacks.forEach(callback => callback());\n}\n\n/**\n * Clear the loaded locales.\n */\nexport function clearLocales() {\n    localeStore = [];\n    callbacks.forEach(callback => callback());\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { ILocale, getLocales, onLocaleChange, getCurrentLocale } from \"./localeStore\";\nimport { logWarning } from \"@vanilla/utils\";\n\nconst LocaleContext = React.createContext<{\n    locales: ILocale[];\n    currentLocale: string | null;\n}>({\n    locales: [],\n    currentLocale: null,\n});\n\nexport function LocaleProvider(props: { children?: React.ReactNode }) {\n    const [locales, setLocales] = useState(getLocales());\n    const [currentLocale, setCurrentLocale] = useState(getCurrentLocale());\n\n    if (!currentLocale) {\n        logWarning(\"No locale loaded for <LocaleProvider />\");\n    }\n\n    useEffect(() => {\n        setLocales(getLocales());\n        setCurrentLocale(getCurrentLocale());\n\n        onLocaleChange(() => {\n            setLocales(getLocales());\n            setCurrentLocale(getCurrentLocale());\n        });\n    }, [setLocales, setCurrentLocale]);\n\n    return (\n        <LocaleContext.Provider\n            value={{\n                locales,\n                currentLocale,\n            }}\n        >\n            {props.children}\n        </LocaleContext.Provider>\n    );\n}\n\nexport function useLocaleInfo() {\n    return useContext(LocaleContext);\n}\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\ninterface ITranslations {\n    [key: string]: string;\n}\n\nlet translationStore: ITranslations = {};\n\n/**\n * Load a set of key value pairs as translation resources.\n */\nexport function loadTranslations(translations: ITranslations) {\n    translationStore = { ...translations };\n}\n\n/**\n * Clear all translation resources.\n */\nexport function clearTranslations() {\n    translationStore = {};\n}\n\n/**\n * Translate a string into the current locale.\n *\n * @param str - The string to translate.\n * @param defaultTranslation - The default translation to use.\n *\n * @returns Returns the translation or the default.\n */\nexport function translate(str: string, defaultTranslation?: string): string {\n    // Codes that begin with @ are considered literals.\n    if (str.substr(0, 1) === \"@\") {\n        return str.substr(1);\n    }\n\n    if (translationStore[str] !== undefined) {\n        return translationStore[str];\n    }\n\n    return defaultTranslation !== undefined ? defaultTranslation : str;\n}\n\n/**\n * The t function is an alias for translate.\n */\nexport const t = translate;\n","/**\n * @copyright 2009-2019 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nexport * from \"./LocaleDisplayer\";\nexport * from \"./localeStore\";\nexport * from \"./translationStore\";\nexport * from \"./LocaleProvider\";\n","/**\n * Set wepback's public path.\n * Otherwise the lookups of dynamically imported webpack files can fail on sites that have a different webroot\n * Eg. installed in a subfolder / using Reverse Proxy.\n *\n * @author Adam Charron <adam.c@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license GPL-2.0-only\n */\n\nimport { assetUrl } from \"@library/utility/appUtils\";\n\n/**\n * This needs to be a free variable.\n *\n * Webpack does some magic to make this work.\n * It you try and set a local or global version of it, it WILL NOT work.\n *\n * @see https://stackoverflow.com/questions/12934929/what-are-free-variables\n * @see https://webpack.js.org/configuration/output/#output-publicpath\n * @see https://github.com/webpack/webpack/issues/2776#issuecomment-233208623\n */\n// @ts-ignore: Cannot find variable warning. See comment aboe.\n__webpack_public_path__ = assetUrl(\"/dist/\" + __BUILD__SECTION__ + \"/\");\n"],"sourceRoot":""}